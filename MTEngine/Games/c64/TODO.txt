TODO: pokey stereo num_cur_pokeys in mzpokeysnd.c
/* TODO: re-init Atari SoundInit and update num channels when this is changed

// TODO BUG: when timeline rewind the F7 disk directory view is not updated -> loading disk image from snapshot in f7 view

BUG atari800: https://atariage.com/forums/topic/300257-second-life-demo-lamers-on-atari800mac-501/
https://github.com/ajcekg/LMS_SLS

DONE: remove pokey stereo from settings
DONE: STORE HUNT AND FIND NEW COMPARE  (HC = HUNT COMPARE)
DONE BUG: DIGGER'S VIEW WRONG PLACEMENT
DONE: ATARI STORE SCREEN WITH SNAPSHOT
FIXED: ATARI Antic draw4 crashes when scrubbing paused
FIXED: MONITOR SCROLL NIE DZIALA
DONE: pokey waves position - pokey space
DONE: MOVE MONITOR VIEW WHEN VICE IS ON


TODO: SAVE debug SYMBOLS WITH SNAPSHOT !!!!!!!!

TODO FIX WORKAROUND: when scrubbing to exact frame we need to be able to restore snapshot immediately, so we have to restore to previous one


Hmm dumb question.. I can't seem to get the kickass .dbg symbols in the debugger. They used to work for me.. do you still just pass the .dbg file as the -breakpoints argument? and the layout is shift-cmd-f3 on mac? this is with 0.64.56.8
5 Scrawlin's

Marcin Skoczylas
Arrr!
Yer thoughts
Scribblins
Roy C Riggs
Roy C Riggs -breakpoints is for loading a text breakpoints file. i believe it just looks for a .dbg file and loads it if present. however the newest version seems to never load in any breakpoints at startup either way.
Run the ship
Arrr!
· Return fire · 3d
Michael Keith
Michael Keith ahh hmm yeah that makes sense, tho it just doesn't seem to find the .dbg file for me, despite it being right there. and you're right about the breakpoints file never being loaded.




DONE SETTING FOR c64SettingsUseNativeEmulatorMonitor


DONE ATARI: ATARI DETACH EVERYTHING
DONE ATARI: -pass works

ATARI: w tej wolnej przestrzeni po srodku powinien byc widoczny current cycle frame & time

DONE?: VICE monitor 2 ways, when running or when stopped. if we are stopped we need another inside loop in monitor_startup to monitor code running process

DONE: MOVE MONITOR VIEW WHEN VICE IS ON




TODO: ATARI SNAPSHOTS COMMAND LINE
// TODO: change command line to detect type of snapshot
// TODO: Atari TAPE files
// TODO: ATARI Cartridge command line


SID HOLD: HOLD GAUGE AND NOT APPLY TO CHANGES WHEN IN UX HOLD


else if (!strcmp(cmd, "snapshot"))
{
char *arg = c64ParseCommandLineGetArgument();
c64SettingsPathToViceSnapshot = new CSlrString(arg);
}



The break point settings allows to capture when an address is executed (CPU) and written to (Memory) but I fail to find an option to capture the scenario where a memory address is read.






DONE: Screen_show_disk_led

DONE: void c64d_atari_set_cpu_reg_p(u8 val)  -> make sync


FIXED: F10 zawsze powinien reagowac nawet jak snapshot manager pracuje

DONE: who last read ctrl+shift+click
DONE: who last written does not work on atari ctrl+click

crash on scroll left

DONE? ATARI EXECUTE WHITE TOO LOW COLOR ON MEMORY MAP



‎


BUG NOT DONE Marco Lubber Marcin Skoczylas I just found out the debugger immediatly freezes when the mouse is at the lower border of the debugger window ( = covers the timeline) when the debugger starts. If the mouse is somewhere else it starts as usual. Windows 10

Bug: Freeze when the mouse covered the timeline at startup
(thanks to Marco)



v0.64.56.8b (maintenance release)
Bug fixed: Some edge cases for timeline and code-backstepping fixed
Bug fixed: Ctrl+G (go to address) was not working in Disassemble view
Bug fixed: Freeze when the mouse covered the timeline at startup (thanks to Marco)
Bug fixed: Memory hunt command in monitor was not finding values in some cases when end address was near end of memory (thanks to Shallan)
Bug fixed Atari: Joystick up was not properly emulated sometimes (thanks to Pajero/MadTeam^Samar)
Bug fixed Atari: Some keyboard shortcuts were crashing (thanks to Pajero/MadTeam^Samar)
Bug fixed Atari: Changing CPU registers was not reflected when code was paused (thanks to Pajero/MadTeam^Samar)
Added: Scroll disassemble to address which last read memory value by Ctrl+Shift+Click (written by Ctrl+Click)
Added: Version can be checked using --version command line option, console output works also on Windows (requested by Marco)
Added: Scroll monitor console
Added Atari: Atari800 emulator code base upgraded to version 4.2.0
Added Atari: Timeline and code back-stepping
Added Atari: Source code debugging symbols and watches
Added Atari: PIA and GTIA registers related to joystick
Added Atari: New layouts available
Added C64: Switch to use VICE monitor in Settings (requested by Bacchus/Fairlight)
Added Windows: Possibility to set process priority and boosting (Settings/UI)
Bug fixed MacOS: Sometimes C64 65XE Debugger window was not visible when started for the first time (thanks to Yosi and Stephen)

And a lot other	fixes and tweaks for Atari emulator!



2) One function neither VICE nor C64debugger has is a function to record memory read/writes for a period of time. It would log all reads, writes and executions of every memory address of RAM (no need to record ROM and I/O access) between when I start the recording and until I stop it (and also not taking into account the bogus reads as per VICE bug 1134). I can think of the options to look for CPU read/write/execute but also optionally VIC reads (not sure if it would be possible to break that down to if it was read as bitmap, char, sprite but that would be totally outside the initial scope for me, but still cool). With this kind of log, it would be possibly to efficiently clean out unused parts of the program for efficient packing.

D 1000 2000 file.txt        should we have > and >> to append?


BUG: hovering over timeline during startup causes lock


HOW TO MacOS project change name from C64 Debugger to 65XE Debugger
Project settings/Build Settings/Product name
Project settings/Info/Bundle name
Project settings/General/Bundle identifier
Project settings/General/App icon
MainMenu.xib -> Menu 65XE Debugger
MainMenu.xib -> Window title 65XE Debugger
C64D_Version.h -> #define



There's no command-line option to force the reset, I'll add this to my TODO list.

monitor_open();
while (!exit_mon) {
make_prompt(prompt);
p = uimon_in(prompt);
if (p) {
exit_mon = monitor_process(p);
} else {
exit_mon = 1;
}

if (exit_mon) {
/* mon_out("exit\n"); */
break;
}
}
monitor_close(1);



v0.64.56.8
Bug fixed: Changing layout was also changing VIC Display's layout border mode
Bug fixed: Crash when adding PC breakpoint in Layout #4
Bug fixed: Passing empty breakpoints.txt file was hanging the debugger (thanks to Erol Tahirovic)
Bug fixed: Use of Keyboard as joystick settings are now properly stored and restored (thanks to Ollie and Roy C Riggs)
Added: Drag'n'drop of g64 files (requested by Bacchus/Fairlight)
Added: Show colour hex code in VIC State view (requested by Bacchus/Fairlight)
Added: Memory hunt (H) command also accepts 16-bit values, so H 1000 2000 D418 will search for existence of 18 D4 pair (requested by Alex Goldblat)
Added: Layout that shows all bitmaps in the memory at once (requested by Digger/Elysium)
Added: Snapshots Recorder! Rewind emulation backwards as well forward and also scrub using timeline.
Added Linux: Full screen mode on Linux (activate using Alt+Enter, thanks to szczm_/Samar)
Added MacOS: Window size and position is properly restored after app restart (thanks to Mojzesh/Arise)
Added MacOS and Linux: Integration via standard fifo pipe, check specs how to interact remotely with the C64 Debugger (good for UI/IDEs!).



Bug : Each time c64debugger is run, we have to always press Ctrl+Y to turn Joystick On, as this setting does not seem to be remembered (saved) when c64debugger is exited (thanks to Ollie)


TODO: widok golary vic display ze gora od raster jest render a dol display

TODO: KURSOR JAK EDYTUJE DANE ZE JEST W DISASSEBLE WIDOCZNY TEZ EDING CURSOR Z DATA DUMP KRATKA EDYCJI

TODO: DRIVE FLUSH MOVE OUT FROM THREAD

SHOW IRQ LINES IN VIC DISPLAY

CTRL + Z LOAD LAST EDITED SNAPSHOT

INSERT - MOVE INSTRUCTION DOWN BUT STOP ON NEXT EXECUTED CODE   0f98 jmp 1000   insert -> do 1000 przesuwa, bo w 1000 bylo executed

SHORTCUT TO INSERT NEXT DISK

nie wiedzialem ze wkladasz dyskietke oraz odpalasz prg
to ma sens faktycznie i chyba wiem o co chodzi


// nie wiem czy to bug, czy tak ma być, ale jak wrzucam drag'n'drop plik .sid na skrót, to odpala mi poprzednio załadowany PRG, chyba od razu powinien wymusić odpalenie playera do .SID, tak mi się wydaje.

// Sander Egon Would it be possible to integrate Siddump directly for capturing desired sections frame by frame?


ale musze robic mute za kazdym uruchomieniem :face_palm:
Slajerek 10:40 AM
nie zapisuje mute??
tzn volume=0 tak?
Mojzesh 10:40 AM
command + t

1 ---  each time c64debugger is run, we have to always press Ctrl+Y to turn Joystick On, as this setting does not seem to be remembered (saved) when c64debugger is exited

2 ---  someone mentioned that often when using the keyboard as joystick to play a game in c64debugger:
"It seems like, when playing a game;  if you release a direction and fire button within the same tick,  only one release is registered and therefore the state for the joystick seems to break and its pretty much unrecoverable at that point"


BUG: sometimes crashes SidFP::output on startup

ten bug z sync audio jak jest MUTE musze naprawic,
widok ctrl+F1 (PUSTY!) jest wolniejszy i to calkiem duzo wolniejszy niz Ctrl+Shift+F6 (zaawansowany vic editor)


https://www.facebook.com/groups/365793590211548/permalink/1187343928056506/

The debugger with source-code view is a great invention! Here you can see some compiled KickC-code, where I have included the C-code as comments.

However, I really miss the ability to see (& even better add) watches and memory directly on this view so I can see the data the code uses/modifies.

To properly debug the shown code I need to quickly get to the values of the labels shown (distance, bucket, ...) and the tables I use (BUCKETS, BUCKET_IDX).

My suggestion:

- Add memory/watches window at the bottom of this view

- Make the labels clickable to move the memory view to the address of the clicked label

- Extend the watches view to allow more advanced watches (word values, small lists of bytes/words )

- Add a way to add labels to the watches view easily and change how each watch is displayed (eg. change a watch to word view or small byte list view)





TODO: bug: 65xe debugger laduje SIDy i sie rejestruje w systemie

https://sourceforge.net/p/c64-debugger/tickets/39/

memory read breakpoint: https://sourceforge.net/p/c64-debugger/tickets/36/

GOATTRACKER: https://csdb.dk/privatemessages/viewmessages.php?shownew=1

// TODO: CREATE KEY SHORTCUT przewijanie


nie zapisuje katalogu jak wczytuje snapshot z ctrl+o



Snapshots Recorder usage (Cmd on Mac, Ctrl on Windows/Linux):

Cmd+Left Arrow: rewind 10 frames backwards
Cmd+Shift+Left Arrow: rewind 5 seconds
Cmd+Shift+Alt+Left Arrow: rewind one frame

Cmd+Right Arrow: forward 10 frames
Cmd+Shift+Right Arrow: forward 5 seconds
Cmd+Shift+Alt+Right Arrow: forward one frame

Alt+F10: back-step one instruction

BUG: czasem przy przewijaniu klatek do przodu moze sie przywiesic tak ze nie reaguje przewijanie, odwieszenie (F11) pozwala znowu przewijac.



* In the view with the drive ram disassembly there is plenty of screen estate left. I would like to see the pins on the serial bus - what's read and written from the respective sides (computer and drive)

* Possibly also a break point option on communication over the serial bus

* Option to clear a particular/all snapshots - I so often press the wrong key and start Count Duckula which seemingly is there somewhere in a snapshot buffer


co robimy z REU?


TODO: add menus I need to get a grip of this thing. I found it rather uncomfortable to use 😞

TODO: store VIC memory changes for each cycle: Is it so that this screen only logs the vic registers changes and not memory content?

TODO: VICE DEBUG BORDERS implement new space (WTF!)

TODO: watch add / menu
TODO: quick load snapshot on basic run to be always on the same page with BASIC
TODO BUG: save snapshot when code is paused does not work sometimes: 1. pause code. 2. load quick snapshot 3. save snapshot
TODO (in progress): snapshot manager with automatic save, snapshot system is now using in-memory dumps.
TODO: SID full screen view

TODO: VICE MONITOR interface to support internal console

protocol:
load prg <file>
break <addr>
start / wait


BUG: Pontus Berg: We all know the memory map of the c64. You have the full 64KB RAM (well 65534 to be picky at address $00 and $01 aren't RAM) and then ROM and IO registers that are accessible depending on memory configuration. But it seems that the memory map (both the sort of bitmap representation and also the array of memory content bytes) doesn't discriminate between banks. So if I look at the $d000 to $dfff area, I will see pink highlights of the $d000, $d400 and $dc00 also when I look at the RAM that was never changed. (CTRL+M to toggle view here).

BUG: on linux in fullscreen screen is moved to left and not centered


Seems not a bug: w cybernoid przestaly dzialac klawisze!!!!!!!!!!


DONE: Alex: h 1000 1500 $d418  instead of break it to 2 bytes -> search values
DONE: (req by Pontus) VIC status hex values of colours in the boxes: No hex codes in these coloured boxes The d020 to d026 are just coloured boxes

v0.64.56.6
Bug Fixed: Changing SID register was not reflected when CPU emulation was paused in some SID emulation engines
Bug Fixed: Detach everything was not detaching cartridge
Bug Fixed: 1541 Drive memory map was showing pixels based on C64 memory map
Bug Fixed: Disassemble command in monitor console was sometimes not adding a new line character (thanks to Alex Goldblat)
Added: REU settings menu and REU registers view in Ctrl+F5
Added: Timestamp, frame number and cycle number counters shown in in Ctrl+F5 (zero by Shift+Backspace)
Added: Frame number, cycle number, raster line, raster cycle and bad line state added to profiler log. Note, the event name has been changed from 'log' to 'cpu'
Added: Settings switch to also do VIC profiling (event 'vic')
Added: Keyboard shortcut to switch auto load reset and jump modes
Added: Some more Debugger API functionalities and a dummy plugin example


BUG: Thread 1 Crashed:: com.apple.audio.IOThread.client
0   pl.rabidus.C64Debugger        	0x000000010ce7fc96 SND_MainMixer(int*, unsigned int) + 62 (SND_Main.mm:39)
1   pl.rabidus.C64Debugger        	0x000000010c9b684c playCallback(void const*, void*, unsigned long, PaStreamCallbackTimeInfo const*, unsigned long, void*) + 77 (SND_SoundEngine.mm:232)


BUG: jak jest widok inny niz vic editor jak sie zrobi drag&drop png na debugger to jest crash

fixed?: crash on driveflush after snapshot save

BUG: detach everything reu?
BUG: save memory in monitor adds file name? S 2000 3F40


bylebym nie zapomnial dodac ze mam juz wreszcie snapshot w pliku vce schowany, to te przerobione snapshoty o ktorych mowilem
ale tego nie zrobilem jeszcze


*TODO SETTINGS lo prio - possible via vice commandline* /Is there any easy way to specify replacement C64 KERNAL and BASIC ROMs on the command line?
c64memrom_basic64_rom
drive_rom1541_embedded
c64memrom_kernal64_rom

TODO: VIC profiler
if (c64d_vicii_record_state_mode == C64D_VICII_RECORD_MODE_EVERY_CYCLE)


c64SettingsUseMultiTouchInMemoryMap


TODO: change fonts to SDF for better scaling: https://github.com/libgdx/libgdx/wiki/Distance-field-fonts

TODO: oziphantom does you log handle:
	badlines, sprite DMA, IRQs etc, does it just get tacked on to the cost of the instruction, are you able to filter out what is and isn't IRQ etc.

TODO: CP437 font: https://github.com/atdt/escapes.js/blob/master/escapes.js#L426
: add frame number / reset frame number
profile: count number of executions / display
profile: count number of reads, writes / display
profile: show previous vals
profile: new profiler screen

REU view with disassemble

TODO: store/restore quick snapshots:
skip REU:
int c64d_store_reu_image_with_snapshot = 1;

skip DISK:
int c64d_store_disk_image_with_snapshot = 1;


**** BASIC RUN
jsr $FDA3 // IOINIT, init CIA,IRQ
jsr $FD50 // RAMTAS, init memory
jsr $FD15 // RESTOR, init I/O
jsr $FF5B // SCINIT, init video
cli
jsr $E453 // load BASIC vectors
jsr $E3BF // init BASIC RAM
jsr $E422 // print BASIC start up messages
ldx #$FB // init BASIC stack
txs

Then I setup IRQ, VIC and CIA registers to my liking. After a program is selected from cartridge menu, I restore original IRQ and call these:
jsr $FDA3 // IOINIT, init CIA,IRQ
jsr $FD15 // RESTOR, init I/O
jsr $FF5B // SCINIT, init video
cli
jsr $E453 // load BASIC vectors
jsr $E3BF // init BASIC RAM
jsr $A68E // set current character pointer to start of basic - 1
ldx #$FB
txs

then I copy the program to its address ($0801), set $2d/2e to end of program, and then:
jsr $A871 // clr
jsr $A533 // re-link
jmp $A7AE // run

Just a guess, but some programs assume default register/memory state after load so either you are missing some register values or memory setup is wrong or garbage in memory (leftovers after depacking) may be in your way.
https://csdb.dk/forums/?roomid=11&topicid=137233&showallposts=1

***********


snapshot manager w widoku ctrl+f5 states: liczenie ramki od 0 tj od run - to juz mam gotowe w jukebox, po prostu tylko wyswietlac liczbe na ekranie trzeba, przycisk snapshot nagrywa snapshot z numerem klatki - i dodaje go do wyswietlanej listy na ekranie co sie przewija w gore

klik w numer klatki przenosi do tego snapshota

DONE: save counters with snapshot
DONE: reset cycle/frame counter on autostart
DONE: reset cycle/frame counter key shortcut
DONE: btw pamiętaj pls o tym skrócie klawiszowym do "ALWAYS JUMP TO LOAD ADDR YES/NO"


--> contact pontus berg for nuvie player hack


slajerek takie coś zauważyłem przez przypadek, że LeftCTRL+N w basicu działa tak jak C=+SHIFT, ale tylko raz.


slajerek Admin 1:39 AM
widzialem to kiedys, to ten pogrzany engine od vice via moj wrapper, mam gdzies w todo zeby zrobic do wyboru direct klawiatura (gotowe) oraz direct eventy (prawie gotowe)


* REU
detach everything - add reu

static const ui_menu_entry_t reu_menu[] = {

static BYTE reu_read_without_sideeffects(WORD addr)
static void reu_store_without_sideeffects(WORD addr, BYTE byte)
static void reu_io2_store(WORD addr, BYTE byte)

run by c64
inline static void store_to_reu(unsigned int reu_addr, BYTE value)
inline static BYTE read_from_reu(unsigned int reu_addr)

inline static void store_to_reu(unsigned int reu_addr, BYTE value)
inline static BYTE read_from_reu(unsigned int reu_addr)



file_string_REUfilename_callback
c64_cart_flush_callback		CARTRIDGE_REU
c64_cart_save_callback		CARTRIDGE_REU

int cartridge_save_image(int type, const char *filename)
cartridge_save_image(CARTRIDGE_REU, name)


/*! \brief integer resources used by the REU module */
static const resource_int_t resources_int[] = {
{ "REUImageWrite", 0, RES_EVENT_NO, NULL,
&reu_write_image, set_reu_image_write, NULL },
{ "REUsize", 512, RES_EVENT_NO, NULL,
&reu_size_kb, set_reu_size, NULL },
/* keeping "enable" resource last prevents unnecessary (re)init when loading config file */
{ "REU", 0, RES_EVENT_STRICT, (resource_value_t)0,
&reu_enabled, set_reu_enabled, NULL },
RESOURCE_INT_LIST_END
};


UX: F7 insert disk - no disk replace with open dialog


TODO: mouse up/down in CDebuggerAPI/CDebugInterface

///////////////

jak sie robi right arrow > w adres i dotyczy komorki w disassemble ktora jest widoczna na ekranie to leci taki kwadracik dookola
do tego read i write na argumentach! chyba +X +Y?

bug: ctrl+m nie zmienia pamieci do disassemble

stack tracke / execution history

Ctrl+F1 is slow, but vic editor with the same view is quick


*VIC Editor import:
// TODO: 'forced colors mode'
// TODO: 'bit align mode' to always align colors the same way in each char


bug: sid emulation off sync is broken and slow


?? bug: run olny atari
?? error : NES thread allocated too much ram ??


--TODO--

TODO: SYS_ApplicationShutdown in windows/linux



BUG: even if sid mute is on, the audio driver makes clicks on step code f10 (reported by golara)

BUG: https://csdb.dk/release/?id=174932 <- a propos zawiesza, tutaj sie zawiesza odczyt z dysku jak robie autorun


if possible to add the display memory contents as PETSCII data could be really helpful . on the vice its the "i" command , e.g. I 0400 07e7

https://www.lemon64.com/forum/viewtopic.php?t=43279&sid=2d37c01b63ead139ff1e96300ae8904d



* VIRTUAL FILE SYSTEM
"File system access", if enabled, allows the device to emulate a drive accessing a file system directory; note that when a disk image is attached to the same drive, the directory is no longer visible and the attached disk is used instead.
"File system directory" specifies the directory to be accessed by the drive.
"Convert P00 file names", if enabled, allows access to P00 files using their built-in name instead of the Unix one.
"Create P00 files on save", if enabled, creates P00 files (instead of raw CBM files) whenever a program creates a file.
//////


https://translate.google.com/translate?sl=auto&tl=en&u=https%3A%2F%2Fwww.c64-wiki.de%2Fwiki%2FNuvie


////




I think I'll leave it but will change the text displayed when joystick is turned on
to say that joystick is on port #1 and #2 🙂
Bacchus: Toggle joystick off, 1, 2 and both?



=== NES ======
TODO: store cart ROM with snapshot bool NesDebugInterface::LoadFullSnapshot(char *filePath)

TODO: ADD isCartLoaded to stop emulation frame when there's no cart. HINT: can be debug pause?
TODO: ADD select ROMs folder in NES
TODO: select XML database with ROMs md5

TODO: add circular buffer for audio sync

int nstmain(int argc, char *argv[]) {
info->valid_extensions = "nes|fds|unf|unif";

const retro_game_geometry geom = {
Api::Video::Output::WIDTH - (overscan_h ? 16 : 0),
Api::Video::Output::HEIGHT - (overscan_v ? 16 : 0),
Api::Video::Output::NTSC_WIDTH,
Api::Video::Output::HEIGHT,
get_aspect_ratio(),

========

TODO: highlight sprite in VIC status on mouse over in Vic Display.

TODO: selected sprite should be outlined in vic editor

TODO: add automatic scaling of image to 320x200 in vic editor import

TODO: goto label
TODO: add/remove/edit watch

TODO: finish CHAMP profiler -> + watches/labels   /UI menu ?

TODO: VICE monitor

TODO: scroll monitor text

TODO: profiler grapher pokazujący zmiany wartości komórki na wykresie czasowym byłby miodowy ;-)

TODO: find assembly, ie. JSR $1003. the same as command H in monitor, but assembled code

TODO: 1:1 pixel aspect ratio in full screen (and others: what about raster cross factors)

nadal brakuje sid to prg converter do drag&drop

in disassembly shift + right arrow should move down or jump to quickly scroll inwards of procs by just pressing shift + r>

* ATARI
ATARI: atari settings: static void SystemSettings(void)
ATARI: raster break ANTIC_break_ypos == ANTIC_ypos
ATARI: raster ctrl+e ANTIC_xpos/ANTIC_ypos
ATARI: void Screen_DrawAtariSpeed(double cur_time)
ATARI: cartridge 				CARTRIDGE_Remove_Second();
int r = CARTRIDGE_Insert_Second(CARTRIDGE_piggyback.filename);
CARTRIDGE_InsertAutoReboot(CARTRIDGE_main.filename);
CARTRIDGE_RemoveAutoReboot();

ATARI: 	case AFILE_CAS:	case 	case AFILE_CART:case AFILE_ROM:

ATARI: 		if (!StateSav_ReadAtariState(filename, "rb"))
return AFILE_ERROR;
/* Don't press Start nor Option */
GTIA_consol_override = 0;
break;


TODO: Save joystick on/off setting with settings.

DONE: show sprite pointer at sprite dialog in Vic Editor

DONE: DIALOG OPEN FILE CRASH WHEN NO DIRECTORY - TETSUO


TODO: "rejestrator makr w word", tj. jukebox nagrywanie


TODO: integrate profiler https://github.com/specht/champ?fbclid=IwAR26oNd7BO4ztHPzU4x6vK3DgcvIvOdTznMfbP7F4pUAHAedR-8c-qKbqf0

TODO: isildur: nie rysowac sprites na ekranie C64 via VICE: how to optimize this to not slow down emu (void* calls?)
case 1:
render_buffer[i] = COL_D025;
break;
case 2:
render_buffer[i] = COL_D027 + s;
break;
case 3:
render_buffer[i] = COL_D026;
break;



granie ogg w jukebox (->tracker)
set vice volume :)

forever lost z pece!

BUG: disassemble problem screenshot

BUG: atari full screen start not corrected workaround

BUG: RTS -> arrow r does not move into return address (+1 history) click

readme atari debugger


// ctrl+f11 run X instructions/lines (selectable in settings)
// shift+f11 jump to next raster vsync
// run selected number of instructions/cycles


BUG: PROPER AUDIO OUT VOLUME! for 65xe debugger & C64 Debugger -> done in MG Tracker


tap w ekran vic display na innych ekranach robi automatycznie breakpoint w tym cyklu i odpala demko do breakpointa

albo na ekranie pokazac gdzie cpu byl idle / poza przerwaniem


BUG: eksport sprajtów zapisuje tylko pierwszy z brzegu, zamiast wszystkich na ekranie, tak ma być?

TODO: setbkg inc/dec

bug: ctrl+m: set is from ram does not switch Disassemble adapter
bug: execute marker does not distinguish ROM/RAM execution


So my general wish list is:
- Window based structure (also with a pulldown menu based setting structure).
- Improved monitor that does all what the VICE one does plus more.





A cosmetical thing is the settings now. "Emulation" is very little about that. You have sort of "broken out" tape from that. I would sugget a disk and a cart item under "settings" so emulation, disk, tape, cart, audio, memory and UI"


// TODO: export sprite colors and flags
LOGTODO("export sprite colors and flags");

TODO: SystemDialogFileOpenSelected - make delete path when finished callback in Windows & Linux (done in MacOS)

BUG: tetsuo: file select dialog on linux, scroll does not show the last line (last file)

TODO: viceditor żeby zliczał ilość użytych znaków bardzo pomocne przy robieniu grafiki na znaki (isildur)


TODO: Add PLAY OGG in JukeBox player
TODO: add play ogv in jukebox player

TODO BUG: ADD ExtraKey (CMD/Ctrl) support: I cannot get on MacOS *Ctrl*+F10 to step over JSRs, regardless of whether I have "use all F1, F2 etc...

TODO: Does the save icon let me save a charset? Load + Save icons for charset.

BTW tak sobie przypomnialem o tym co kiedys mowilismy - taki quick help do skrotow w VIC Editor i ogolnie c64d

csdb:
https://csdb.dk/privatemessages/viewmessages.php?shownew=1
thumbs up for creation and improvement of c64debugger at first, have been using frequently. i have below issue, noticed while testing previous release, cabal, Cabal +8DFHIR
summary: settings - use keyboard as joystick Y / N might not be reliable, toggling them. tested with latest 0.64.2

i first did:
settings - c64 model = C64 NTSC and hard resetted and
settings - use keyboard as joystick Y

loaded cabal boot file, trainermenu appears, i set above to N to navigate through trainers up and down arrow keys. that's OK.
and then set use keyboard as joystick Y again.
game loads, but joystick seems not working. then i switch above N and then Y and start game. finally, after that toggle, joystick behaviour is out of control!

my system is win7 64 bit, locale TR (i don't think debugger executable has a connection with locale)





//////////////////
BUG: $d800 colour changes in vic state, take default? charset colour strange changes i rogue-2.prg


ctrl+k by mogl te kombinacje zmieniac
tj ctrl+k by po kolei robil
- bez koloru
- kolory z pod kursora myszki
- zestaw 00 0b 0c 0f
- zestaw 0f 0c 0b 00
etc..


isildur 12:49 AM
hmmm a nie prościej byłoby założyć, że user edytuje max 1 zestaw znaków i jeden zestaw kolorów?
załżyć/wymusić?


slajerek 12:50 AM
no nie do konca bo przy podgladaniu sobie demek moze byc odtwrotnie ten bitorder a tak ctrl+k i ma juz dobrze
inaczej za kazdym razem gdzies do menu i ustawiac recznie


isildur 12:51 AM

tak CTRL+K jest dobrym pomysłem, bo aż tak dużo kombinacji nie ma


slajerek 12:51 AM
4-5 sie wcisnie ctrl+k i dostanie cos co moze ma sens

dobra mysle ze moze to nie taki zly pomysl

//////////////////





WATCHES: https://sourceforge.net/p/c64-debugger/tickets/20/
Watches - a watch is essentially a defined range of memory with a label or name. Watches would be displayed with its Name, and Values in HEX/DEC/BIN
Watch Boundries - a Watch should have the ability to be defined using normal memory identifiers such as byte, word, text, etc
Watch View - watches could be displayed on a seperate view along with dissasembly, screen and register information - ideally, one could swap the memory map or data dumps with watches
Quick Watch - pressing ctrl-w from any memory location will create a "quick watch"
Watch Import - have the ability to import watches created from assemblers, etc


ADD NEW WATCH in watches view

TODO: search by name of watch
- search/goto watches / wyszukiwanie watch

TODO: sort watches (by addr, by name)
- sort watches / sortowanie watch

- edycja wartosci watch

TODO: search by name of label
- search/goto labels / wyszukiwanie labelek


TODO: In memory dump Switch to also display watch name (above the value)


TODO: store snapshow as PRG (like action replay's FREEZE)


BUG: Karty w systemie Windows przełączanie = crash.


SHOW LABEL IN MEMORY MAP WHEN ZOOMED IN

DISASSEMBLE SHOW ARGUMENT COLOUR BASED ON MEM ACCESS
disassemble colouring for read/write

EDIT TEXT IN DATA DUMP


memory dump cursor bar horiz & vert


DONE: 65xe debugger set path to roms on macos

FIXED: atari has red outline in F1!


DONE?: disable some layouts in 65xe debugger


DONE: menu for 65xe debugger


DONE: zoom in viceditor with bar moves zoom center

select code with shift+ctrl export with ctrl+c


DONE? przy ladowaniu KLA/ART zrobic tak jak z VCE reset c64


Hard Reset aka CTRL+SHIFT+R will also remove the breakpoints from the list.


could be nice if Load PRG and start (CTRL+L) would create notification like loading a prg to the debugger ,
could be nice "loaded from" start address + end address like you display now


i wish if there option to clear a bunch of breakpoints without disable them . apparntly loading the PRG
or even Hard Reset don't clear the breaks.


BUG: viceditor: it is possible to move window out of the screen and it is then lost



bug: jak jestem na widoku sf5 i robie touch scroll up/down to po przelaczeniu na dowolny widok z memory dump to sie wykonuje niepotrzebny event konczy scroll




update to vice3.2




TODO: update the LibreOffice version of README


BUG: CHARSET (??)


REVIEW can't paint from ux perspective and remove limitations (always paint whatever option)

MG TRACKER: MASTER VOLUME SLIDER FOR THE PRESENTATION 


robi se zooma i wciska enter na memory map na zoomie i pisze wartosci ramu!




gdy jest wybrane w vic display bitmap a jest tryb textowy to teraz jest pokazywane tak jak screen
moze lepiej pokazywac tak jak charset
albo tak jakby to bylo gdyby faktycznie byl wybrany bitmap?


BUG: ??? ctrl+shift+f4 does not refresh sprites (scan ?) ??




BUG: memory map ctrl+m is not generic


BUG: memory map isFromDisk




Right+Click C64 screen on any layout to switch between:
- real c64
- zoomed c64
- vic display style


Atari
LOGM("TODO: configure ROMs");

*TO CHECK* atari joystick
atari snapshots
atari symbols & breakpoints from file
atari watches
atari breakpoints view
atari menu view




czy idzie wylaczyc antyaliasing w debugerze?
bluring powoduje ze moje oczy wariuja (w sensie proboja robic akomodacje, bo maja wrazenie ze obraz jest dalej)
bylo by super jesli dalo by sie wlaczyc "ostrą pixeloze"
Marcin
teraz można wyłączyć tylko na ekranie przedstawiającym C64
elementy UI nie
Andrzej Śliwa
myslisz ze to duza zmiana zeby to zrobic opcjonalnie
?
Marcin
nie powinno byc ciezkie bo mozna to sprobowac przez globalny przelacznik
ale wygladac bedzie tragicznie :}
przynajmniej windows sobie wogole nie daje rady z nearest scale i nie wiem czemu
mac jest OK
Andrzej Śliwa
dlatego zrobienie tego jako optional bylo by fajne
pewnie wiekszosc ludzi tego nie potrzebuje
ale jak ktos ma dobry wzrok i uzywa retiny to oczy swiruja 😀
moglbym cie prosic o dodanie takiej opcji?
Marcin
spoko - dorzucę do TODO, to nie będzie ciężkie 😉
Andrzej Śliwa
daj znac jak pojdzie na "produkcje" 😀
Seen by Andrzej Śliwa at 3:24in the evenin'




BUG: VicEditor locks sometimes on paint... missing UnlockMutex somewhere (?)


SID VIEW: http://www.oxyron.de/html/registers_sid.html


NOT A BUG: windows editor icons do not load properly  -> VirtualBox 'enable 2d/3d acceleration'






la-style> In Monitor i always have to select a range of atleast 2 Bytes to fill a memory Location. You are not able to fill just 1 byte. It always has to be atleast F 1000 1001 31, I cant do F 1000 1000 31 .......hmm


autorundisk entry num

TODO: redirect monitor output to file
TODO: scroll monitor console



TODO: ViewVicEditor proper Deserialise
	*FIXED* a dwa - to i tak nie zadziala dla wiekszej liczby rejestrow ($d011/$d016/$d020/$d021..)


----




------
la-style> In Monitor i always have to select a range of atleast 2 Bytes to fill a memory Location. You are not able to fill just 1 byte. It always has to be atleast F 1000 1001 31, I cant do F 1000 1000 31

autorundisk entry num




moze chodzi o ustawienie z ctrl+shift+f5 ?

isildur 11:05 PM
tak

slajerek 11:05 PM
ah ok

@isildur chyba zrobie to inaczej, bo te ctrl+shift+f5 jest ustawienie pod ten vic display, tj. w zasadzie to glownie do debuga tymczasowe
zrobie kontroler podobny w vic editorze
ale on bedzie juz w comodorku zmieniac

isildur 11:09 PM
super 😃

slajerek 11:09 PM
bedzie lepiej, bo tak sie myla pojecia ze tak powiem
moze to wreszcie polacze wlasnie odrazu z jakims dialogiem "NEW PICTURE" 😃 😃








# Any progress in the more flexible window handling and adding a menu system? A menu system replacing the F9 screen would make it so much more accessible.

x# In-app, context-aware, help would also be great. Standing on the hex view and selecting help giving the info what this is and the keys that works here.

# Getting the native Vice monitor would also be most appreciated. The monitor is really the weak part. If so you might have a little look at the monitor as such an possibly submit a few improvements to the native Vice monitor. Features I would be dearly looking at would be:

* Printing to file:
- Commands such as CHIS is great but you can only get what you can fit on screen as there is no scroll buffer and you cannot print to file. Making a "CHIS 500 >file.txt" would seem very logical, giving you a file with a 500 row computer history.





// int sid_sound_machine_calculate_samples(sound_t **psid, SWORD *pbuf, int nr, int soc, int scc, int *delta_t)
// static int resid_init(sound_t *psid, int speed, int cycles_per_sec, int factor)
// static int residfp_init(sound_t *psid, int speed, int cycles_per_sec, int factor)
// static int fastsid_init(sound_t *psid, int speed, int cycles_per_sec, int factor)
// when changed:    sid_state_changed = 1;
static const resource_int_t common_resources_int[] = {
{ "SidEngine", SID_ENGINE_DEFAULT,
RES_EVENT_STRICT, (resource_value_t)SID_ENGINE_RESID,
&sid_engine, set_sid_engine, NULL },		<------
{ "SidFilters", 1, RES_EVENT_SAME, NULL,
&sid_filters_enabled, set_sid_filters_enabled, NULL },
{ "SidModel", SID_MODEL_DEFAULT, RES_EVENT_SAME, NULL,
&sid_model, set_sid_model, NULL },


TODO: panel z dioda stacji | isildur 1:55 PM mnie jeszcze BAAARDZO brakuje diody stacji w F1

https://drive.google.com/drive/folders/1k1dHTBfGdvNmA803X-6T55GdOwdpXyLF

*PROGRESS*: show watch,memory watch... podglad wybranych komorek pamieci
able to "watch" memory locations. these watches would include a name, and then the values in hex/dec/bin - i would like to be able to define the boundaries of the watch for example, byte, word, text, etc - these watches could be displayed on a separate view, along with disassembly, screen, register information, etc - additional features - from any memory location (memory map, disassembly, etc) pressing ctrl-w will create a "quick watch" - finally - allow 64db to read input file containing predefined watch variables that could be spit out from assemblers, etc - ok - can you have that done by next week







BUG: vic display in NTSC does not calc proper raster lines

TODO: check remote VICE debugger

TODO: sprites browser

TODO: sid view
      stereo sid - two SIDs in one screen


DONE?: load t64/tap files


TODO:  the C64 fonts on the Settings are really not fit in my opinion . when i resize the app , the fonts are close to be unreadable. i can attach you printscreen if you want .


TODO: (not sure how to do that...) when i use "d nh startaddress toaddress " command could be cool if you form it with a dialog box . for now its writing the files without extension to "D:\" which i don't have a clue how they got to this drive if i have never wanted to save the files there. except of all my request/nerdish asks , the app is just one of coolest apps around . keep cool ! beer on me very soon



TODO: autorun disk commandline param to run selected file #



TODO: additional labels in memory view: c64 memory is divided into banks, it would be nice if the memory view showed you where these banks begin and end.

TODO: menus!








Some day ago with Isildur we even thought to create an expansion to the d64 with meta tags, disk sheet/sleeves, box arts, anyway...
https://github.com/psenough/teach_yourself_demoscene_in_14_days


artillery: https://www.youtube.com/watch?v=6Sfl5VOszEs




---------

BUG: w vice: przy zapisie na dyskietke na windows, nie robi sie flush - trzeba poczekac chwile i dopiero wtedy d64 sie uaktualni.

- README changelog




- COMMAND LINE to reset in autoload

- setting TO un-pause debugging code when PRG is loaded


- settings: grid settings


- colodore settings



- vic editor: TOOLBAR
- vic editor INFO view: plus może przydało by się:
- info jakie kolory są wybrane w 8x8 pod kursorem?
- info jaka jest pozycja x/y pod kursorem
- jaka jest wartość tła i border ($d021, $d020) ?
- przełącznik hires/multi ?

- Flood fill pixels

- save local snapshot as ...

/////////




2. option to export disassembler only to text . could very ! handy.
3. nice easy way to see all the the keys combinations for the multiple views like CTRL+F1 , CRTL+F2, and which tabs they contain (data dump/memory dump
3. shift+ctrl+0 don't work to unload CARTS when i use AR6
5. the keyboard the escape for me is always to escape the present screen so i prefer to exlude it from the assign-keys , a bit obstructive cause i want to get out of the screen without ! saving which apparently i can't !   <--- ISILDUR?
6. resize of the window don't always align the small frames , for example: SHIFT+CTRL+F2 when resize to full width , it doesn't change the frames (disassembly) respectively , there gaps of space and its a bit annoying.
7. on Winvice there is nice option to make SC command to see the screen in petscii layout , could be nice if there feature/option to do it (not like the CTRL+F1 to show the acutall c64 screen) also here
8. add hinting while moving across over the fields to show added information , like CC , VC panel to display what every field means. just a suggestion , i know its a lot of work to do .
10. maybe its just me but i can't understand how the memory dump is working , the zooming don't work all the time (i don't know why)*FIXED*
and i don't know what it meant for and why the scrolling (page up/down) is not working there but i guess its only me who got troubles on that window. also could be nice to bind the data dump view with the memory view , if i press on hex value for example $1000 , so the memory map will be refeshed. just a suggestion.
sorry if i was messy Marcin Skoczylas don't take it too hard , i am a software tester so i am very picky and nerdish sometimes. i love your tool very much and encourage others to use it too , cause i believe it powerful tool for C64 usres.


Add Memory marker for "DISPLAYED" when VIC accesses data.


- show sprites values

- VIC Display zoom

- VIC Editor: support of VIC_DISPLAY_SHOW_BORDER_NONE



TODO: LINUX UPDATE VIEWPORT

bug: w f4 nie dziala lewy mem zoom




DONE: SAVE SNAPSHOT should pause



- periodically store snapshot to rewind demo



- (test linux), bug remove always on top when dialog open & restore always on top

https://github.com/waskomo/ProjectOne


// TODO: create customizable shortcuts for VicEditor
- VIC EDITOR keyboard shortcuts

- make Vic EDITOR values nicer

- vic display as replacement for real c64 screen with r-click (c64/zoom/display)


- update sid_engine, machnie type in menus (based on write snapshot):     resources_get_int("SidEngine", &sid_engine);
BUG: resid.cc ->  snapshot zapisuje teraz też state.voice_mask...




TODO: vice autoload -d8 bug


TODO: freq sida  note recog? TODO: interval tree, add interval tree to readme



vic display: dodac key shortcut jako switch c64 screen zoom ,




??? bug: jak wlaczasz widok vic display to nie ma priority sprajtow tj. echo sprajt jest wyzej niz



///
MOVE MACOS SETTINGS FOLDER TO .C64Debugger



jak jest cpu jam to reset nie odpauzowuje



snapszot light

waaataaa siiit? set model type zadziala z wczytywanym snapshotem light

// failed to load snapshot, make a full reset, this will likely crash
int model = viewC64->debugInterface->GetC64ModelType();

if (model == 0)
{
viewC64->debugInterface->SetC64ModelType(1);
}
else
{
viewC64->debugInterface->SetC64ModelType(0);
}

SYS_Sleep(200);

viewC64->debugInterface->SetC64ModelType(model);

SYS_Sleep(200);

viewC64->debugInterface->HardReset();


//
xcode plugin: https://github.com/krzysztofzablocki/LinkedConsole

VICE 3.1:
maincpu.h: extern void maincpu_set_pc(int); extern unsigned int maincpu_get_pc(void); (...)
palette.c/h: static palette_info_t palettelist[] = {
uimon: win32?
ciacore/viacore.c: sprawdzic update BYTE c64d_ciacore_peek(cia_context_t *cia_context, WORD addr)


///
REMOVE DEBUG IN DBG_Log.h
Opis

shift+f5 - asm view

TODO:

- LINUX drag&drop


- adapter to show only what was stored in memory

// BUG: Te komunikaty są już z samego VICE, ja przekierowuje linie komend to silnika emulatora i on "nie rozumie" tych parametrow ktore sa dedykowane tylko do debuggera. To taka niedorobka, w zasadzie maly blad, bo powinienem te parametry linii komend ktore juz "wykorzystalem" nie przesylac dalej do VICE. Fakt, dzieki ze zauwazyles - dorzucam do listy rzeczy do zrobienia.

- ctrl on disassemble address => move cursor to address (podkreslenie na mouse over)

- bug: disassemble jest sterowane z rastra przez set pc, force wyswietlanie zawsze current PC innym kolorem (czerwony jako blocked?)



// - scroll monitor console

- podpiac monitor VICE

// TODO: click menu items in Settings menus

- show disabled sprite s data grayed out in VIC state (rebuild display & do not concatenate texts...)
- stały statusbar na dole pod wszystkim z diodami od power/floppy/warp

- http://www.catch22.net/tuts/drag-and-drop-introduction
- select colodore parameters http://www.colodore.com
- PAL scan lines










/////////


*WINDOWS* dialog click: Przy imporcie, -czasami- pojawiają się randomowe pixele, ok 2-5 szt.

*WINDOWS BUG* Przy zmianie skrótu do warp na Alt+W, DBG zmienia go na ALT+E (przy czym ALT+E nie używałem do niczego)




*OK??* F5 - restart from last JMPed address (+ reboot?)


---

EDYTOR:

@slajerek nie wiem, czy dobrze zrozumiałem, ale wydaje mi się, że powinno być: dopóki trzymasz alt to blokuje kolory i stawiasz pixele co drugi (na zmianę kolory) w x i y (w kratkę) i tyle, od następnego naciśnięcia ALT (i przytrzymania) robisz to samo - dither- w miejscu kursora. "Siatka" ditheringu nie może być na "sztywno" jak w P1 na przykład :wink:
a z tym gridem, to też nie do końca rozumiem, ale na podstawie tego, co pisze Compyx chodzi mu o to, że np. Pixcen wyłącza automatycznie grid przy <400% (co dla mnie akurat jest na plus)... ehhh każdemu nie dogodzisz :smile:


jak powinno działać wybieranie koloru w ramach 8x8 w multi
tzn ok mam paletę, wybieram sobie kolor i chcę postawić pixel
i co dalej tzn. który kolor powinienem “podmienić”, pewnie “następny wolny”, ale co gdy są wszystkie “zajęte” ?

Aha bardzo fajną opcją jest rysowanie w trybie UNRESTRICTED HIRES/MULTI, czyli bez ograniczeń C64, ale tylko z użyciem kolorów komodorka.

Sprawdź sobie w wolnej chwili z CSDB: "Project One". PIXCEN, MULTIPAINT
te dwie palety, to tylko tak na test, bo nie wiem, która będzie bardziej funkcjonalna pozioma/pionowa

Dodatkowe info oczywiście, że tak i jak je opisałeś jest super.   ---> + bit order
Ikonki Hires/Multi już są na wcześniejszym screenshocie.







--------------

// TODO: addGuiButtons is temporary, it should be avoided and another view just for these buttons must be created
//       keep CViewC64VicDisplay just a generic display view with callbacks



bug with CPU flags --??




/////////


TODO: zaznaczanie komórek w memory dump i COPY
TODO: M <adr1> <adr2> [file name]   - dump memory



// TODO: mouse zoom? *DONE*skala powiększenia w Ctrl+Shift+F2 w Settings
// low priority: CTak samo skala celownika




// BUG: opcja on/off timerb z cia wprowadzic spowrotem


///


// "cycling" screen:
// 1. Fonty (siatka 8x8)
// 2. Miec co ktorys font (zeby sieczki nie bylo za duzej) z boku legende zeby bylo widac ktory to font na szybko.
// *DONE* 3. Przy cyklowaniu to jakbym mogl zrobic zooma screena np x4 x8 dookola markera rasterbeam'u. To by byla w ogole baaaajka. A ta siatka wtedy by pozwalala sie nie "zgubic" bo bym wiedzial gdzie jestem.

// !!!!!! Na takim ekranie "do cyklowania" memdump w hexie i sprajty etc sa zbedne. Styknie asm+screen+screen zoom+VIC registers i jest bajka.


// go to label z podpowiadaniem


// TODO: I'd like to see more control from the command line so project specific actions could be
// taken such as write the memory to file for a specific set of frames, zoom and view specific
// memory areas (custom views of this? ;-)).



// (?) zaznaczanie banku vic na mem map



// ctrl+f11 run X instructions/lines (selectable in settings)
// shift+f11 jump to next raster vsync
// run selected number of instructions/cycles


// - Different speeds to automatically step through the code (10-100%?)
// run selected number of instructions/cycles










// // wlaczyc MIDI SUPPORT
//       1) NIE LEPIEJ COFNAC SIE DO ORYGINALNEGO COMMITA?
//          // napisac skrypt co robi porzadnego diffa po nazwie pliku - moja wersja vs oryginalna 2.4.0 i listuje pliki.
//          // musi sam namierzac/znajdowac pliki i katalogi  ---- OK.
//
//       2) jesli nie ma roznicy to kopiujemy plik z 2.4.28 do source tree
//       3) jesli jest roznica to patchujemy recznie
*DONE*




// BUGS:

// On Linux GTK dialogs do not work on some machines (seems this is a problem with GTK itself).
// Well, on my 64bit linux I cannot open any file dialog, like when trying to open a prg or cardridge.
//Crash says after trying on open a prg:
//-------------------------------------------
//(C64Debugger:1662): GdkPixbuf-WARNING **: Bug! loader 'png' didn't set
//an error on failure
//(C64Debugger:1662): GdkPixbuf-WARNING **: Bug! loader 'png' didn't set
//an error on failure **
//Gtk:ERROR:/build/gtk+3.0-Ym2tpG/gtk+3.0-3.20.3/./gtk/gtkiconhelper.c:491:ensure_surface_for_gicon:
//assertion failed: (destination)

//    +yugorin



// TODO: PAL CRT emulation



// TODO: upgrade residfp to residfp-1.0




//
// - ICU64 had an option that you could make a snapshot of memory, and compare it so a later snapshot to see which bytes where changed
// (comes in handy for making trainers for games), I'd like to see that in C64 Debugger as well.
// ---> (compare from file monitor command) CF 1000 <file>





// BUG: There seems to be a timing issue with some games. I tried Drelbs, and normal Vice 2.4 runs the game fine, whereas in the new debugger there were random level restarts


// BUG: w main settings w opcji ladowanie d64 po zaladowaniu snapshota bedzie zla wartosc
// BUG: loading snapshot na 8580 moze rozwalic przester: ^^^^^ zrobic analogicznie - ustawic na 6581, a pozniej pociagnac ze snapshota i uaktualnic menu setting
// *FIXED?* BUG: widzialem wlaczony kursor edycji memory dump w lewym gornym rogu ekranu (oops?). confirmed by Isildur

// BUG: 1541 memory map click does not set current value in memory dump








// IDEAS:

//> Powiększanie okna z oddziaływaniem na RAM/ROM - popatrz ICU



// store gfx video with snapshots

// store execute markers with snapshots

// fakt, może widok IO by się też przydał dodatkowo

// *PARTIAL* optimize %2.2x %4.4x to uint8toChar(...


//> - dzieją się rzeczy dziwne :) po fullscreenie *sid zaczął grać ... dziwnie ...*


///Thanks to Scan of House Designs for help in tracking the D64 loader problem with Spindle.



// TODO: @Slayerek: Would you be able to record some sort of screencast with feature walkthrough? :)   --> riverwash


DONE: Raw text is just a raw text, so a dump of current character video memory (f.e. values stored in 0400-07E7), followed by color memory (values stored in D800-DBE7), followed by background colour (value stored in D021).


DONE: dodac w vic editor nowy layer 'reference' pod display/c64 (wtedy display/c64 kolor d021 oznacza przezroczystosc). to unrestricted nieedytowalny.
DONE: FIXED bug: win32 only: show cmd line error/help in messagebox
DONE: shift+ctrl+C isildur: mam taki mały i dosyć ciekawy request: żeby po kliknięciu na wartość w tabeli lub na ekran/bitmapę/charset automatycznie ten adres kopiował się do schowka, ew. ctrl+c, (jak na obrazku) co sądzisz?
*DONE* VicEditor ctrl+N create new image
*DONE*: obok przyciskow bedzie paleta zeby wybrac kolor tla
DONE click on VIC status to see registers click w VIC State - show pure register values
DONE click on SID status to see registers click w SID State - show pure register values
DONE click on CIA status to see registers click w CIA State - show pure register values
DONE click on VIA status to see registers click w VIA State - show pure register values

DONE: isildur: da się zapisać/odtworzyć jakie layersy są włączone?

DONE:
VIC Display - select "CHARSET" mode
The Debugger now supports checking where was written SCREEN, BITMAP, COLOUR, unfortunately not CHARSET. I will add this into my TODO list, but this can also be easily achieved. By Ctrl+Clicking on a value in memory dump it will move assembly code to place that wrote the value.
*FIXED*: I am not able to zoom in on memory map on .64 release. (?)
DONE:
?musze zrobic callback cos w stylu 'zainicjalizuj VIC' z VCE
?dorzucam do TODO, thx for report 🙂
???	viewC64->debugInterface->SetVicRegister(0x20, colorD020);
???	SYS_Sleep(100);
???	viewC64->debugInterface->SetVicRegister(0x21, colorD021);
*DONE*: 2. on the Monitor console is a bit elusive , as the marker in not auto-focus on the Monitor pane. take me a time to focus on the monitor. but maybe its just me hehe small "nice to have option" (which ofcourse its just my experience maybe other will say the opposite. its okay we are different in our GUI Experience )

DONE? VicEditor set VIC regs on import
*DONE*. Able to change the background of the tabs especially the Disassembly . black is sometimes not so nice and i prefer whiter themes/ or background selections (from default selections )
*DONE* to bold the tabs !! they almost unseen with the tick of them.



*DONE* Z tymi kolorami jest tak, że w P1 jak wykorzystałeś już  kolory, to masz blokadę ijak chcesz podmienić kolor to robisz to przez CTRL+LMB z nowym kolorem (ta opcja mnie najbardziej pasuje), ale będą na 100% narzekania i to dałbym do wyboru opcje KEEP/REPLACE color.

Teraz najważniejsze skróty klawiszowe:
*DONE* SHIFT+LMB - pobierz kolor pod kursorem
*DONE* CTRL+LMB - wypełnij pixele pod kursorem kolorem wybranym z palety
*DONE* ALT+LMB - dither painting, czyli stawianie na zmianę pixeli z wybranych kolorów foreground/background

*DONE* X - zamiana miejscami kolorów foreground/background (X - nie na obrazku, a tylko w palecie jak w PS)
*DONE* CTRL+wheel - zoom in/out zarówno w głównym oknie edycji, jak i w podglądzie, przy czym nie płynnie, a skokowo np. 25%, no chyba, że da się lepiej i prościej w wersji płynnej.

*DONE* [     ] -  zmniejszenie/powiększenie brush'a - jak w PS


*DONE*
Można zrobić wybieranie kolorów z klawiatury 1...0 plus SHIFT+1...0, albo tak jak w wartościach kolorów 1...0  $0b (B), $0A (A) itd.
* Na razie zrobilem 12345678qwertyui bo blokuje mi inne potrzebne shortcuty

Wybor koloru:
*DONE*duży kwadrat na pierwszym planie pokazuje którym kolorem rysujesz LMB i ten na drugim planie kolor rysowany przez RMB (zazwyczaj służy jako ERASE), czarny kwadrat po nimi to kolor tła $D021 i mały kwadrat zamiana miejscami jak w Photoshopie



* w sumie może być tylko open/save, a jak będzie się otwierać PNG to wtedy będzie z opcjami, ale to jak chcesz. Zrobię jak Ci wygodniej

*DONE* okno z prv zoom musi być ruchome, żeby odsłaniać tam zasłonięty obszar obrazka i to samo z palette


// *DONE?* shifted keys do not work on windows


// *DONE*zoom in ekranu c64 ?>?<??>??

*DONE* upgrade to VICE3
*DONE*: if could be nice /better way to save Koala pictures then to the go VIC Editor screen and do Export. maybe 1 button to open dialog and to save Koala . so is for char+screen+color memory (nice for ripping stuff ;-)




////////////////////





//czarny ekran
//napis sei
//
//leci kod z kernela c64
//
//out -> na prawo przewija
//
//c64 sie bootuje wpisujemy load
//
//
//===
//
//w trakce pokaz debuggera
//
//===
//
//


//http://www.studiostyle.sk/dmagic/gallery/gfxmodes.htm

//http://unusedino.de/ec64/technical/aay/c64/
//http://www.ffd2.com/fridge/docs/c64-diss.html

//https://www.c64-wiki.com/index.php/Extended_color_mode

//http://www.mikesenese.com/DOIT/2011/03/twelve-awesome-commodore-64-hacks-and-projects-and-a-gallery-of-classic-c64-game-discs/




/////////// RECENT CRASHES
Process:               C64Debugger [50580]
Path:                  /Users/USER/Desktop/*/C64 Debugger v064564-RC1.app/Contents/MacOS/C64Debugger
Identifier:            pl.rabidus.C64Debugger
Version:               0.64.56.4 (0.64.56.4)
Code Type:             X86-64 (Native)
Parent Process:        ??? [1]
Responsible:           C64Debugger [50580]
User ID:               501

Date/Time:             2019-02-21 02:07:16.289 +0100
OS Version:            Mac OS X 10.12.6 (16G1618)
Report Version:        12
Anonymous UUID:        52CA4157-8346-4AC2-5829-4DFDC824C4E6

Sleep/Wake UUID:       D54396B2-F123-4CB9-B998-878FEDE1B50D

Time Awake Since Boot: 130000 seconds
Time Since Wake:       3800 seconds

System Integrity Protection: disabled

Crashed Thread:        5  com.apple.NSEventThread

Exception Type:        EXC_CRASH (SIGABRT)
Exception Codes:       0x0000000000000000, 0x0000000000000000
Exception Note:        EXC_CORPSE_NOTIFY

Application Specific Information:
abort() called
*** error for object 0x7fcef6e810c8: incorrect checksum for freed object - object was probably modified after being freed.


Thread 0:: C64PerformStartupTasksThread  Dispatch queue: com.apple.main-thread
0   libsystem_kernel.dylib        	0x00007fffcb434c22 __psynch_mutexwait + 10
1   libsystem_pthread.dylib       	0x00007fffcb51fdfa _pthread_mutex_lock_wait + 100
2   libsystem_pthread.dylib       	0x00007fffcb51d519 _pthread_mutex_lock_slow + 285
3   pl.rabidus.C64Debugger        	0x0000000108796358 0x108445000 + 3478360
4   pl.rabidus.C64Debugger        	0x0000000108902340 0x108445000 + 4969280
5   pl.rabidus.C64Debugger        	0x00000001089067ee 0x108445000 + 4986862
6   pl.rabidus.C64Debugger        	0x00000001088c43d8 0x108445000 + 4715480
7   com.apple.AppKit              	0x00007fffb3f55d25 -[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] + 6735
8   com.apple.AppKit              	0x00007fffb3f53f0a -[NSWindow(NSEventRouting) sendEvent:] + 541
9   com.apple.AppKit              	0x00007fffb3dd8a92 -[NSApplication(NSEvent) sendEvent:] + 2186
10  com.apple.AppKit              	0x00007fffb3653427 -[NSApplication run] + 1002
11  com.apple.AppKit              	0x00007fffb361de0e NSApplicationMain + 1237
12  pl.rabidus.C64Debugger        	0x000000010844ffbe 0x108445000 + 44990
13  libdyld.dylib                 	0x00007fffcb306235 start + 1

Thread 1:: com.apple.audio.IOThread.client
0   libsystem_kernel.dylib        	0x00007fffcb42d34a mach_msg_trap + 10
1   libsystem_kernel.dylib        	0x00007fffcb42c797 mach_msg + 55
2   com.apple.audio.CoreAudio     	0x00007fffb56d3935 HALB_MachPort::SendMessageWithReply(unsigned int, unsigned int, unsigned int, unsigned int, mach_msg_header_t*, bool, unsigned int) + 127
3   com.apple.audio.CoreAudio     	0x00007fffb56d38a6 HALB_MachPort::SendSimpleMessageWithSimpleReply(unsigned int, unsigned int, int, int&, bool, unsigned int) + 42
4   com.apple.audio.CoreAudio     	0x00007fffb56d08d0 HALC_ProxyIOContext::IOWorkLoop() + 1196
5   com.apple.audio.CoreAudio     	0x00007fffb56d0264 HALC_ProxyIOContext::IOThreadEntry(void*) + 128
6   com.apple.audio.CoreAudio     	0x00007fffb56cffa3 HALB_IOThread::Entry(void*) + 75
7   libsystem_pthread.dylib       	0x00007fffcb51f93b _pthread_body + 180
8   libsystem_pthread.dylib       	0x00007fffcb51f887 _pthread_start + 286
9   libsystem_pthread.dylib       	0x00007fffcb51f08d thread_start + 13

Thread 2:: c64
0   pl.rabidus.C64Debugger        	0x00000001089081f3 0x108445000 + 4993523
1   pl.rabidus.C64Debugger        	0x000000010890880b 0x108445000 + 4995083
2   pl.rabidus.C64Debugger        	0x00000001089086e7 0x108445000 + 4994791
3   pl.rabidus.C64Debugger        	0x000000010861521e 0x108445000 + 1901086
4   pl.rabidus.C64Debugger        	0x00000001087cd02d 0x108445000 + 3702829
5   pl.rabidus.C64Debugger        	0x00000001087cd843 0x108445000 + 3704899
6   pl.rabidus.C64Debugger        	0x00000001087cd232 0x108445000 + 3703346
7   pl.rabidus.C64Debugger        	0x000000010864859e 0x108445000 + 2110878
8   pl.rabidus.C64Debugger        	0x00000001084471ba 0x108445000 + 8634
9   pl.rabidus.C64Debugger        	0x00000001088002e1 0x108445000 + 3912417
10  pl.rabidus.C64Debugger        	0x0000000108706939 0x108445000 + 2890041
11  pl.rabidus.C64Debugger        	0x00000001084747ac 0x108445000 + 194476
12  pl.rabidus.C64Debugger        	0x000000010865d6ae 0x108445000 + 2197166
13  pl.rabidus.C64Debugger        	0x0000000108795fda 0x108445000 + 3477466
14  libsystem_pthread.dylib       	0x00007fffcb51f93b _pthread_body + 180
15  libsystem_pthread.dylib       	0x00007fffcb51f887 _pthread_start + 286
16  libsystem_pthread.dylib       	0x00007fffcb51f08d thread_start + 13

Thread 3:
0   libsystem_kernel.dylib        	0x00007fffcb434f46 __semwait_signal + 10
1   libsystem_c.dylib             	0x00007fffcb3bbb72 nanosleep + 199
2   pl.rabidus.C64Debugger        	0x00000001087f44df 0x108445000 + 3863775
3   pl.rabidus.C64Debugger        	0x000000010865d769 0x108445000 + 2197353
4   pl.rabidus.C64Debugger        	0x0000000108795fda 0x108445000 + 3477466
5   libsystem_pthread.dylib       	0x00007fffcb51f93b _pthread_body + 180
6   libsystem_pthread.dylib       	0x00007fffcb51f887 _pthread_start + 286
7   libsystem_pthread.dylib       	0x00007fffcb51f08d thread_start + 13

Thread 4:: CVDisplayLink
0   com.apple.GeForceGLDriver     	0x00007fffb13ec355 gldUpdateDispatch + 1465
1   GLEngine                      	0x000000010ed0ddce gleDoDrawDispatchCore + 520
2   GLEngine                      	0x000000010ecd2842 glDrawArrays_IMM_Exec + 237
3   pl.rabidus.C64Debugger        	0x0000000108471ff0 0x108445000 + 184304
4   pl.rabidus.C64Debugger        	0x0000000108759031 0x108445000 + 3227697
5   pl.rabidus.C64Debugger        	0x0000000108689f1e 0x108445000 + 2379550
6   pl.rabidus.C64Debugger        	0x00000001088c260f 0x108445000 + 4707855
7   pl.rabidus.C64Debugger        	0x000000010864ef92 0x108445000 + 2138002
8   pl.rabidus.C64Debugger        	0x000000010847962c 0x108445000 + 214572
9   pl.rabidus.C64Debugger        	0x00000001084523b4 0x108445000 + 54196
10  pl.rabidus.C64Debugger        	0x0000000108451af6 0x108445000 + 51958
11  com.apple.CoreVideo           	0x00007fffb7225c4a CVDisplayLink::performIO(CVTimeStamp*) + 248
12  com.apple.CoreVideo           	0x00007fffb72257de CVDisplayLink::runIOThread() + 644
13  libsystem_pthread.dylib       	0x00007fffcb51f93b _pthread_body + 180
14  libsystem_pthread.dylib       	0x00007fffcb51f887 _pthread_start + 286
15  libsystem_pthread.dylib       	0x00007fffcb51f08d thread_start + 13

Thread 5 Crashed:: com.apple.NSEventThread
0   libsystem_kernel.dylib        	0x00007fffcb434d42 __pthread_kill + 10
1   libsystem_pthread.dylib       	0x00007fffcb522457 pthread_kill + 90
2   libsystem_c.dylib             	0x00007fffcb39a420 abort + 129
3   libsystem_malloc.dylib        	0x00007fffcb494f5d szone_error + 626
4   libsystem_malloc.dylib        	0x00007fffcb489bec tiny_malloc_from_free_list + 1148
5   libsystem_malloc.dylib        	0x00007fffcb488472 szone_malloc_should_clear + 400
6   libsystem_malloc.dylib        	0x00007fffcb488282 malloc_zone_malloc + 107
7   com.apple.CoreFoundation      	0x00007fffb5ae5097 _CFRuntimeCreateInstance + 295
8   com.apple.SkyLight            	0x00007fffc7688f73 SLTypeCreateInstance + 46
9   com.apple.SkyLight            	0x00007fffc76b6cf0 SLEventCreateFromDataAndSource + 342
10  com.apple.SkyLight            	0x00007fffc76ba09a CGSDecodeEventRecord + 77
11  com.apple.SkyLight            	0x00007fffc7745903 CGSSnarfAndDispatchDatagrams + 1724
12  com.apple.SkyLight            	0x00007fffc76e6ba8 SLSGetNextEventRecordInternal + 84
13  com.apple.SkyLight            	0x00007fffc76b69ce SLEventCreateNextEvent + 50
14  com.apple.HIToolbox           	0x00007fffb50d3bed PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) + 102
15  com.apple.HIToolbox           	0x00007fffb50d3b59 MessageHandler(__CFMachPort*, void*, long, void*) + 51
16  com.apple.CoreFoundation      	0x00007fffb5b7210d __CFMachPortPerform + 253
17  com.apple.CoreFoundation      	0x00007fffb5b71ff9 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ + 41
18  com.apple.CoreFoundation      	0x00007fffb5b71f71 __CFRunLoopDoSource1 + 465
19  com.apple.CoreFoundation      	0x00007fffb5b69be5 __CFRunLoopRun + 2389
20  com.apple.CoreFoundation      	0x00007fffb5b69034 CFRunLoopRunSpecific + 420
21  com.apple.AppKit              	0x00007fffb37abf02 _NSEventThread + 205
22  libsystem_pthread.dylib       	0x00007fffcb51f93b _pthread_body + 180
23  libsystem_pthread.dylib       	0x00007fffcb51f887 _pthread_start + 286
24  libsystem_pthread.dylib       	0x00007fffcb51f08d thread_start + 13

Thread 6:
0   libsystem_kernel.dylib        	0x00007fffcb43544e __workq_kernreturn + 10
1   libsystem_pthread.dylib       	0x00007fffcb51f621 _pthread_wqthread + 1426
2   libsystem_pthread.dylib       	0x00007fffcb51f07d start_wqthread + 13

Thread 5 crashed with X86 Thread State (64-bit):
rax: 0x0000000000000000  rbx: 0x0000000000000006  rcx: 0x00007000022793b8  rdx: 0x0000000000000000
rdi: 0x000000000000060f  rsi: 0x0000000000000006  rbp: 0x00007000022793e0  rsp: 0x00007000022793b8
r8: 0x00000000fffffff0   r9: 0x00007fff577bac58  r10: 0x0000000008000000  r11: 0x0000000000000206
r12: 0x0000000000000001  r13: 0x000000010db9c000  r14: 0x0000700002294000  r15: 0x000000010b261000
rip: 0x00007fffcb434d42  rfl: 0x0000000000000206  cr2: 0x0000700001eff060

Logical CPU:     0
Error Code:      0x02000148
Trap Number:     133


Binary Images:
0x108445000 -        0x108b03ff7 +pl.rabidus.C64Debugger (0.64.56.4 - 0.64.56.4) <8211FD29-BD5D-3AA9-A47A-9528D3FA0B4F> /Users/USER/Desktop/*/C64 Debugger v064564-RC1.app/Contents/MacOS/C64Debugger
0x10b263000 -        0x10b2a1ff7  com.apple.audio.midi.CoreMIDI (1.10 - 88) <5E2D1F53-B466-312E-AEA7-117B68C9A7F0> /System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI
0x10b2cb000 -        0x10b2e4fff  libexpat.1.dylib (15.1) <588CA992-60BB-363B-BEE7-3CC0A26C1AFA> /usr/lib/libexpat.1.dylib
0x10da5c000 -        0x10da86fff  GLRendererFloat (14.0.16) <32A016EE-63CF-3D07-9BAB-C4EB3E8E479D> /System/Library/Frameworks/OpenGL.framework/Resources/GLRendererFloat.bundle/GLRendererFloat
0x10dbae000 -        0x10dbb2fff  com.apple.audio.AppleHDAHALPlugIn (279.48 - 279.48) <ECA84145-2AC4-347D-BBC0-933AAAC15356> /System/Library/Extensions/AppleHDA.kext/Contents/PlugIns/AppleHDAHALPlugIn.bundle/Contents/MacOS/AppleHDAHALPlugIn
0x10ec01000 -        0x10eda7fff  GLEngine (14.0.16) <E8C60E20-6414-32B2-8964-41882943D9C1> /System/Library/Frameworks/OpenGL.framework/Resources/GLEngine.bundle/GLEngine
0x10ede6000 -        0x10f341ff7  com.apple.driver.AppleIntelHD5000GraphicsGLDriver (10.25.19 - 10.2.5) <AB883B56-3345-3AB8-A23D-A3B9BA59BA05> /System/Library/Extensions/AppleIntelHD5000GraphicsGLDriver.bundle/Contents/MacOS/AppleIntelHD5000GraphicsGLDriver
0x110e3b000 -        0x110fa2fff  com.apple.audio.units.Components (1.14 - 1.14) <D4B6F2DA-EDA4-32DB-B3AA-BD40A06B444D> /System/Library/Components/CoreAudio.component/Contents/MacOS/CoreAudio
0x119638000 -        0x119675dc7  dyld (434) <6321D5CB-2FF7-387B-AE8D-B1BBDF8596F3> /usr/lib/dyld
0x11c1c7000 -        0x11c23fff7  com.apple.driver.AppleIntelHD5000GraphicsMTLDriver (10.25.19 - 10.2.5) <C2CC2E12-E626-3107-99CC-A4F226C8D325> /System/Library/Extensions/AppleIntelHD5000GraphicsMTLDriver.bundle/Contents/MacOS/AppleIntelHD5000GraphicsMTLDriver
0x7fffb078f000 -     0x7fffb0ad4ff7  com.apple.RawCamera.bundle (7.04 - 914) <86A67D11-9791-3CE6-9FF5-3387C0AB925B> /System/Library/CoreServices/RawCamera.bundle/Contents/MacOS/RawCamera
0x7fffb10e1000 -     0x7fffb192efff  com.apple.GeForceGLDriver (10.17.5 - 10.1.7) <11AC41DB-8CF2-3A9B-9CBE-7AE372CE173F> /System/Library/Extensions/GeForceGLDriver.bundle/Contents/MacOS/GeForceGLDriver
0x7fffb192f000 -     0x7fffb21f4ff3  libclh.dylib (4.0.3 - 4.0.3) <DFFD232A-C50A-35F5-9CA8-FCB7BF04EA55> /System/Library/Extensions/GeForceGLDriver.bundle/Contents/MacOS/libclh.dylib
0x7fffb21f5000 -     0x7fffb2305ff7  com.apple.GeForceMTLDriver (10.17.5 - 10.1.7) <3098C182-89C4-3830-B959-138A4AD42246> /System/Library/Extensions/GeForceMTLDriver.bundle/Contents/MacOS/GeForceMTLDriver
0x7fffb230b000 -     0x7fffb24ccfff  com.apple.avfoundation (2.0 - 1187.36) <2F390EAD-07BB-3788-9E73-13104C2E04CD> /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation
0x7fffb24cd000 -     0x7fffb256fff7  com.apple.audio.AVFAudio (1.0 - ???) <7997D588-B542-3EBB-B822-D719C1114BB4> /System/Library/Frameworks/AVFoundation.framework/Versions/A/Frameworks/AVFAudio.framework/Versions/A/AVFAudio
0x7fffb263a000 -     0x7fffb263afff  com.apple.Accelerate (1.11 - Accelerate 1.11) <916E360F-323C-3AE1-AB3D-D1F3B284AEE9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate
0x7fffb263b000 -     0x7fffb2652ffb  libCGInterfaces.dylib (331.5) <17109679-A284-3C72-AA60-DBA815D3062B> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib
0x7fffb2653000 -     0x7fffb2b6cfeb  com.apple.vImage (8.1 - ???) <B58A7937-BEE2-38FE-87F4-5D5F40D31DC9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage
0x7fffb2b6d000 -     0x7fffb2cdeff3  libBLAS.dylib (1185.50.4) <4087FFE0-627E-3623-96B4-F0A9A1991E09> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
0x7fffb2cdf000 -     0x7fffb2cf3ffb  libBNNS.dylib (15) <254698C7-7D36-3FFF-864E-ADEEEE543076> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib
0x7fffb2cf4000 -     0x7fffb30eafef  libLAPACK.dylib (1185.50.4) <C35FFB2F-A0E6-3903-8A3C-113A74BCBCA2> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib
0x7fffb30eb000 -     0x7fffb3101fff  libLinearAlgebra.dylib (1185.50.4) <345CAACF-7263-36EF-B69B-793EA8B390AF> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib
0x7fffb3102000 -     0x7fffb3108fff  libQuadrature.dylib (3) <EF56C8E6-DE22-3C69-B543-A8648F335FDD> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib
0x7fffb3109000 -     0x7fffb311dff7  libSparseBLAS.dylib (1185.50.4) <67BA432E-FB59-3C78-A8BE-ED4274CBC359> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib
0x7fffb311e000 -     0x7fffb32a5fe7  libvDSP.dylib (600.60.1) <4155F45B-41CD-3782-AE8F-7AE740FD83C3> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib
0x7fffb32a6000 -     0x7fffb3358fff  libvMisc.dylib (600.60.1) <E18365D7-DCC4-3304-A8D1-395E656D7B99> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib
0x7fffb3359000 -     0x7fffb3359fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <7C5733E7-0568-3E7D-AF61-160F19FED544> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib
0x7fffb3618000 -     0x7fffb43f1ff3  com.apple.AppKit (6.9 - 1504.83.101) <D8C3E72B-3BF3-3F43-A8E9-4E9317174C71> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
0x7fffb4403000 -     0x7fffb4403fff  com.apple.ApplicationServices (48 - 48) <F30BA8DB-748F-3DDC-B07A-F84C9EBCC7A9> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices
0x7fffb4404000 -     0x7fffb4472ff7  com.apple.ApplicationServices.ATS (377 - 422.4) <7386D298-C65B-3FE8-B4F8-1A1C26F662F4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS
0x7fffb450c000 -     0x7fffb463bfff  libFontParser.dylib (194.14) <35E2D4A9-8B28-33FB-8C60-8F57D249F6B0> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib
0x7fffb463c000 -     0x7fffb4686ff7  libFontRegistry.dylib (196.8) <5E5F95FD-F69B-3F1A-9592-C0AB8F5FF57C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib
0x7fffb46e4000 -     0x7fffb4717fff  libTrueTypeScaler.dylib (194.14) <33F2CEAE-7915-3739-AC1F-0F4CC4408F08> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libTrueTypeScaler.dylib
0x7fffb4784000 -     0x7fffb482eff7  com.apple.ColorSync (4.12.0 - 502.2) <ACA4001E-A0E3-33F6-9CD6-EEC2AA15E322> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync
0x7fffb482f000 -     0x7fffb4880fff  com.apple.HIServices (1.22 - 593) <045870A9-1D92-3FEF-8722-671E99A35E71> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
0x7fffb4881000 -     0x7fffb4890ff3  com.apple.LangAnalysis (1.7.0 - 1.7.0) <2CBE7F61-2056-3F96-99A1-0D527796AFA6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis
0x7fffb4891000 -     0x7fffb48defff  com.apple.print.framework.PrintCore (12 - 491) <5027FD58-F0EE-33E4-8577-934CA06CD2AF> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore
0x7fffb48df000 -     0x7fffb491afff  com.apple.QD (3.12 - 313) <B339C41D-8CDF-3342-8414-F9717DCCADD4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD
0x7fffb491b000 -     0x7fffb4926fff  com.apple.speech.synthesis.framework (6.6.2 - 6.6.2) <7853EFF4-62B9-394E-B7B8-41A645656820> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis
0x7fffb4927000 -     0x7fffb4b33ff7  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <1F4026C6-23C1-39E8-823D-72298FECF75C> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
0x7fffb4b34000 -     0x7fffb4b34fff  com.apple.audio.units.AudioUnit (1.14 - 1.14) <2CEE36AF-79E6-3B3E-B369-285E6C1886F7> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit
0x7fffb4c9d000 -     0x7fffb507afff  com.apple.CFNetwork (811.10.1 - 811.10.1) <14E78687-6061-3333-8C3E-E4F272BEA969> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
0x7fffb5094000 -     0x7fffb5094fff  com.apple.Carbon (154 - 157) <69F403C7-F0CB-34E6-89B0-235CF4978C17> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
0x7fffb5095000 -     0x7fffb5098fff  com.apple.CommonPanels (1.2.6 - 98) <BF04BB22-D54C-309E-9F5C-897D969CAF70> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels
0x7fffb5099000 -     0x7fffb53a2fff  com.apple.HIToolbox (2.1.1 - 857.8) <5367366E-747E-32CF-8E76-93CD8E7424C7> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
0x7fffb53a3000 -     0x7fffb53a6ff7  com.apple.help (1.3.5 - 49) <B1A930E3-5907-3677-BACD-858EF68B172D> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help
0x7fffb53a7000 -     0x7fffb53acfff  com.apple.ImageCapture (9.0 - 9.0) <341252B4-E082-361A-B756-6A330259C741> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture
0x7fffb53ad000 -     0x7fffb5444ff3  com.apple.ink.framework (10.9 - 219) <1BD40B45-FD33-3177-A935-565EE5FC79D7> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink
0x7fffb5445000 -     0x7fffb545ffff  com.apple.openscripting (1.7 - 172.1) <78F3256B-AF4C-324A-A591-ECA4443A469F> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting
0x7fffb5460000 -     0x7fffb5461ff3  com.apple.print.framework.Print (12 - 267) <E2F82F1F-DC27-3EF0-9F75-B354F701450A> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print
0x7fffb5462000 -     0x7fffb5464ff7  com.apple.securityhi (9.0 - 55006) <135BC15F-6CC4-3847-A7C9-5AB3F3FD0388> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI
0x7fffb5465000 -     0x7fffb546bff7  com.apple.speech.recognition.framework (6.0.1 - 6.0.1) <082895DC-3AC7-3DEF-ADCA-5B018C19C9D3> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition
0x7fffb554c000 -     0x7fffb554cfff  com.apple.Cocoa (6.11 - 22) <85EDFBE1-75F0-369E-8CA8-C6A639B98FA6> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
0x7fffb5696000 -     0x7fffb5723fff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <78767F88-91D4-31CE-AAC6-1F9407F479BB> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
0x7fffb5724000 -     0x7fffb5737fff  com.apple.CoreBluetooth (1.0 - 1) <BCB78777-76F0-3CC1-8443-9E61AEF7EF63> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth
0x7fffb5738000 -     0x7fffb5a33fff  com.apple.CoreData (120 - 754.2) <4C9CAB2C-60D4-3694-A0A0-5B04B14BD14E> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData
0x7fffb5a34000 -     0x7fffb5ae1ff7  com.apple.CoreDisplay (1.0 - 1) <53D1EAFE-23A4-398D-BF52-E4299E670DB6> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay
0x7fffb5ae2000 -     0x7fffb5f7bff7  com.apple.CoreFoundation (6.9 - 1349.93) <0EEBE5E5-66D3-3FA7-82EA-DA5883120DA5> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
0x7fffb5f7c000 -     0x7fffb65fefff  com.apple.CoreGraphics (2.0 - 1070.22) <FAB476BB-B5CD-3936-8AFC-41229DBDF0E8> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
0x7fffb65ff000 -     0x7fffb6842ffb  com.apple.CoreImage (12.4.0 - 451.4.9) <BE4303C9-C9D9-361D-AC94-DBE40EB6700E> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage
0x7fffb68a9000 -     0x7fffb695afff  com.apple.CoreMedia (1.0 - 1907.59.1.6) <570690D8-A956-3629-9E46-4F8BDDB8A82C> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia
0x7fffb695b000 -     0x7fffb69a6ff7  com.apple.CoreMediaIO (805.0 - 4932) <6A574D9F-B257-3D56-9B21-BB70110A9C1E> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO
0x7fffb69a7000 -     0x7fffb69a7fff  com.apple.CoreServices (775.20 - 775.20) <7579D37B-4391-362B-9C81-FAB104A55BB2> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
0x7fffb69a8000 -     0x7fffb69f9fff  com.apple.AE (712.5 - 712.5) <61F2AE2C-E04E-3FDF-9E88-201325136C83> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE
0x7fffb69fa000 -     0x7fffb6cd5ff7  com.apple.CoreServices.CarbonCore (1159.6 - 1159.6) <08AC074C-965B-3EDF-8E45-0707C8DE9EAD> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore
0x7fffb6cd6000 -     0x7fffb6d09fff  com.apple.DictionaryServices (1.2 - 274) <D23866E2-F7C8-3984-A9D4-96552CCDE573> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices
0x7fffb6d0a000 -     0x7fffb6d12ff3  com.apple.CoreServices.FSEvents (1230.50.1 - 1230.50.1) <2AD1B0E5-7214-37C4-8D11-A27C9CAC0F74> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents
0x7fffb6d13000 -     0x7fffb6e7fffb  com.apple.LaunchServices (775.20 - 775.20) <044A0413-CF32-3A1C-BE8E-FAA0AB2153DC> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
0x7fffb6e80000 -     0x7fffb6f30ffb  com.apple.Metadata (10.7.0 - 1075.41) <558F5979-7B84-3569-80CB-B37381129396> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata
0x7fffb6f31000 -     0x7fffb6f90fff  com.apple.CoreServices.OSServices (775.20 - 775.20) <45CB995C-1E56-3E61-B4B9-113986CF34E6> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices
0x7fffb6f91000 -     0x7fffb7001fff  com.apple.SearchKit (1.4.0 - 1.4.0) <7A6DDA2B-03F1-3137-BA9E-1CC211973E26> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit
0x7fffb7002000 -     0x7fffb7047ff7  com.apple.coreservices.SharedFileList (38 - 38) <DA096678-93AB-3291-BDE2-482F1D544589> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList
0x7fffb70d0000 -     0x7fffb721dffb  com.apple.CoreText (352.0 - 544.18) <B883809B-561B-31C5-949E-D2564B6F808A> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText
0x7fffb721e000 -     0x7fffb7253ff3  com.apple.CoreVideo (1.8 - 235.3) <AC11D5FB-C77B-34F5-B942-F698E84C229F> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo
0x7fffb7254000 -     0x7fffb72c5ffb  com.apple.framework.CoreWLAN (11.0 - 1200.31) <F2369C0E-3B44-3A5C-9837-5AB45369B723> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
0x7fffb73c3000 -     0x7fffb73c8fff  com.apple.DiskArbitration (2.7 - 2.7) <70F56042-EF04-3BAF-9E04-90F423FB2BCC> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration
0x7fffb755a000 -     0x7fffb7900ff3  com.apple.Foundation (6.9 - 1349.92) <99B1320B-7E15-3E84-AB6E-574B57E81D64> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
0x7fffb792c000 -     0x7fffb795dfff  com.apple.GSS (4.0 - 2.0) <F548823F-E626-37A9-AC57-52D74466B169> /System/Library/Frameworks/GSS.framework/Versions/A/GSS
0x7fffb7a1d000 -     0x7fffb7ac0fff  com.apple.Bluetooth (5.0.5 - 5.0.5f3) <586E8B4C-C5C5-3B80-A5E0-E4A5BA29A911> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
0x7fffb7ac1000 -     0x7fffb7b57ff7  com.apple.framework.IOKit (2.0.2 - 1324.60.6) <72AEAC01-3FDF-3F0F-8A4F-1D7CB00B569C> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
0x7fffb7b58000 -     0x7fffb7b5effb  com.apple.IOSurface (159.12 - 159.12) <E3D6FCED-F938-30A3-AD08-0998B674A492> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface
0x7fffb7b5f000 -     0x7fffb7bb0ff7  com.apple.ImageCaptureCore (7.0 - 7.0) <A640CA2F-8093-34AB-947C-26679ECB8A6D> /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore
0x7fffb7bb1000 -     0x7fffb7d11fef  com.apple.ImageIO.framework (3.3.0 - 1599.13) <443879A7-48C6-37ED-AC0B-166EEEABA662> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
0x7fffb7d12000 -     0x7fffb7d16fff  libGIF.dylib (1599.13) <11C5D9D7-B8A1-3D53-BA50-B25976FE6379> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
0x7fffb7d17000 -     0x7fffb7e07ff7  libJP2.dylib (1599.13) <C495FB08-0CD2-36FC-8196-FAD3D598A010> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib
0x7fffb7e08000 -     0x7fffb7e2bffb  libJPEG.dylib (1599.13) <D22E2431-76A5-39B4-AF0B-174CF282A1CE> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib
0x7fffb7e2c000 -     0x7fffb7e53ff7  libPng.dylib (1599.13) <561865FA-A51B-3EFF-ABFF-B4566B90B1A2> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib
0x7fffb7e54000 -     0x7fffb7e56ff3  libRadiance.dylib (1599.13) <6559253B-8FE2-3884-BC93-95BB7705A6D1> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib
0x7fffb7e57000 -     0x7fffb7ea5ffb  libTIFF.dylib (1599.13) <8FC594B3-6BBF-3A70-9994-203E9B330B5F> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib
0x7fffb8003000 -     0x7fffb8c0dfff  com.apple.JavaScriptCore (12603 - 12603.3.8) <9557271A-1838-38DD-93E3-D8A9ECDE3B6B> /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore
0x7fffb8c0e000 -     0x7fffb8c27ff7  com.apple.Kerberos (3.0 - 1) <B9D242EB-E325-3A21-9812-C77CBBFB0D51> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos
0x7fffb8eb1000 -     0x7fffb8eb7fff  com.apple.MediaAccessibility (1.0 - 97.1.1) <0BD82735-6644-37CE-B13D-8E7CC59A1752> /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility
0x7fffb8ecd000 -     0x7fffb9406ff7  com.apple.MediaToolbox (1.0 - 1907.59.1.6) <FA068C6F-0506-35C3-A637-C4AFF82411DB> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox
0x7fffb9407000 -     0x7fffb9462fff  com.apple.Metal (87.18 - 87.18) <E3618B54-C728-34CA-9E8A-9BD33A295D31> /System/Library/Frameworks/Metal.framework/Versions/A/Metal
0x7fffb9d4b000 -     0x7fffb9d53fff  com.apple.NetFS (6.0 - 4.0) <14A24D00-5673-330A-959D-87F72040DEFF> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS
0x7fffb9f2a000 -     0x7fffb9f32ff7  libcldcpuengine.dylib (2.8.5) <8086D6FA-2006-3582-B20E-4209D81ACC58> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib
0x7fffb9f33000 -     0x7fffb9f81ff3  com.apple.opencl (2.8.6 - 2.8.6) <A6140AC4-7579-3AC2-B7EE-08A8899BC811> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL
0x7fffb9f82000 -     0x7fffb9f9bffb  com.apple.CFOpenDirectory (10.12 - 194) <A64E9A01-3F6E-36EA-9C10-88C564A68C9D> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory
0x7fffb9f9c000 -     0x7fffb9fa7ff7  com.apple.OpenDirectory (10.12 - 194) <4298FFD0-B1A7-3064-AF5B-708B3FA38671> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory
0x7fffb9fa8000 -     0x7fffb9faafff  libCVMSPluginSupport.dylib (14.0.16) <AA2468D1-9169-3424-8EE4-0470E9050E21> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib
0x7fffb9fab000 -     0x7fffb9faeff7  libCoreFSCache.dylib (156.3) <687C4CC3-6537-344B-8BE1-5234C8CB2864> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib
0x7fffb9faf000 -     0x7fffb9fb3fff  libCoreVMClient.dylib (156.3) <E7AEFCBE-B6BF-3C7C-9A4E-E78CB04DB794> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib
0x7fffb9fb4000 -     0x7fffb9fbdff7  libGFXShared.dylib (14.0.16) <170D07F3-2D30-3D4B-80A0-971E0A765709> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib
0x7fffb9fbe000 -     0x7fffb9fc9fff  libGL.dylib (14.0.16) <0801F3B9-A525-32BB-9BC0-478947CE21D9> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
0x7fffb9fca000 -     0x7fffba006ff7  libGLImage.dylib (14.0.16) <FE39C57B-056C-3CBF-B653-A8F2005631C1> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib
0x7fffba007000 -     0x7fffba17dff3  libGLProgrammability.dylib (14.0.16) <A81F1B95-445C-3191-ADB1-07BAEA5A204D> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLProgrammability.dylib
0x7fffba17e000 -     0x7fffba1bfff7  libGLU.dylib (14.0.16) <B285EAD6-B3AA-3753-BB85-75864BD6E76C> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib
0x7fffbab27000 -     0x7fffbab35fff  com.apple.opengl (14.0.16 - 14.0.16) <B428BB89-8FE1-3527-BF3E-F8F0A1060884> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
0x7fffbabd2000 -     0x7fffbad19fff  com.apple.QTKit (7.7.3 - 2978.8) <80B27C5D-087F-3B83-AF99-AD6BA2E1105D> /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit
0x7fffbad1a000 -     0x7fffbaf84ff7  com.apple.imageKit (3.0 - 1023) <9C547565-CBAA-3ACB-A3F6-1366A0DCDCB4> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit
0x7fffbaf85000 -     0x7fffbb04cfff  com.apple.PDFKit (1.0 - 1) <BE82F14C-B20C-3771-B16C-F0723F6552AD> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit
0x7fffbb04d000 -     0x7fffbb573ff7  com.apple.QuartzComposer (5.1 - 356) <C66293F6-EF05-3B36-8524-081CEB9FADD7> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
0x7fffbb574000 -     0x7fffbb597ffb  com.apple.quartzfilters (1.10.0 - 1.10.0) <365342ED-7A1A-3C75-AE60-90764E96034C> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters
0x7fffbb598000 -     0x7fffbb685fff  com.apple.QuickLookUIFramework (5.0 - 720.7) <3136C23E-399E-3296-928A-B18EC9FC423C> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI
0x7fffbb686000 -     0x7fffbb686fff  com.apple.quartzframework (1.5 - 21) <09455972-8A33-3D61-B193-BA7E7CF984CA> /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz
0x7fffbb687000 -     0x7fffbb887fff  com.apple.QuartzCore (1.11 - 453.39.11) <64EA202F-7FC7-3D34-B3FC-AD6DF4FF225C> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
0x7fffbb888000 -     0x7fffbb8ddfff  com.apple.QuickLookFramework (5.0 - 720.7) <3BD7BA2F-924C-3EFF-B26E-3F930E62E6B4> /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook
0x7fffbb8de000 -     0x7fffbb8f6fff  com.apple.SafariServices.framework (12606 - 12606.2.104.1.2) <80709335-8132-3C90-A13D-F80B85D8D626> /System/Library/Frameworks/SafariServices.framework/Versions/A/SafariServices
0x7fffbbdf1000 -     0x7fffbc0f3fff  com.apple.security (7.0 - 57740.60.26) <1C910BB7-5E7C-3738-BB1F-4118C0BBB5A2> /System/Library/Frameworks/Security.framework/Versions/A/Security
0x7fffbc0f4000 -     0x7fffbc169fff  com.apple.securityfoundation (6.0 - 55132.50.7) <7879522A-7976-376F-9267-003B778A622F> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
0x7fffbc194000 -     0x7fffbc197ff3  com.apple.xpc.ServiceManagement (1.0 - 1) <C56EFEF9-C9CD-3948-9448-E7B9FF4C8429> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement
0x7fffbc51e000 -     0x7fffbc58dff7  com.apple.SystemConfiguration (1.14 - 1.14) <9B617B63-75E0-3F49-90F9-54C384C66063> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration
0x7fffbc58e000 -     0x7fffbc93cfff  com.apple.VideoToolbox (1.0 - 1907.59.1.6) <EB2577A4-DCDF-3FD1-B5FA-42A55653A74D> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox
0x7fffbede4000 -     0x7fffbedffff3  com.apple.AppContainer (4.0 - 307.50.21) <C2E6BA3D-81FF-39C3-B4BF-DBB9A17DE078> /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer
0x7fffbee00000 -     0x7fffbee0dff3  com.apple.AppSandbox (4.0 - 307.50.21) <BF9FA426-8C11-358B-9E1F-A3901E3F2B14> /System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox
0x7fffbee0e000 -     0x7fffbee30ffb  com.apple.framework.Apple80211 (12.0 - 1200.47.1) <730E01DB-E3AC-3494-A77C-CF5D13CE3A65> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211
0x7fffbee31000 -     0x7fffbee40feb  com.apple.AppleFSCompression (88.50.3 - 1.0) <478E8BFF-8BA2-375E-BE02-BA27F115C15A> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression
0x7fffbef37000 -     0x7fffbefc297f  com.apple.AppleJPEG (1.0 - 1) <B9E9570D-04A4-34E4-B756-D200043B25B8> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG
0x7fffbeffb000 -     0x7fffbeffeff3  com.apple.AppleSystemInfo (3.1.5 - 3.1.5) <42A1731A-A576-307A-B07C-9F8F64696CB7> /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo
0x7fffbefff000 -     0x7fffbf051fff  com.apple.AppleVAFramework (5.0.36 - 5.0.36) <B272678B-2EA8-3F04-BB0F-3CE62D1E4F58> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA
0x7fffbf3f5000 -     0x7fffbf473ff7  com.apple.backup.framework (1.8.5 - 1.8.5) <CC679891-E8F5-3166-8EB6-AEA06954A52D> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup
0x7fffc00fe000 -     0x7fffc0125ff3  com.apple.ChunkingLibrary (173 - 173) <FC2165F9-FC93-39C0-8323-C2F43A5E00A3> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary
0x7fffc0a4a000 -     0x7fffc0a53ffb  com.apple.CommonAuth (4.0 - 2.0) <3B7FFF45-1D2D-3CAC-A102-E16D3AF681D8> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth
0x7fffc0bd8000 -     0x7fffc0fb7ff7  com.apple.CoreAUC (226.0.0 - 226.0.0) <FBF6C5BC-5937-3957-B6BA-E101DF9B0DF6> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC
0x7fffc0fb8000 -     0x7fffc0fe8fff  com.apple.CoreAVCHD (5.9.0 - 5900.4.1) <3F6857D1-AE7C-3593-B064-930F5BB7269E> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD
0x7fffc119c000 -     0x7fffc11acfff  com.apple.CoreEmoji (1.0 - 40.3.3) <E9A28301-2D79-3A97-A046-028258A6ABE5> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji
0x7fffc1271000 -     0x7fffc1287ff3  com.apple.CoreMediaAuthoring (2.2 - 956) <AEBFF55F-BF1E-3CA5-AA9C-1CE22218A665> /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring
0x7fffc128e000 -     0x7fffc131effb  com.apple.CorePDF (4.0 - 4) <7F50E4A6-940C-33F5-BE4E-7E01AFE98A8F> /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF
0x7fffc14e7000 -     0x7fffc1517ff3  com.apple.CoreServicesInternal (276.2 - 276.2) <05EB7D45-DD4C-3A0F-AC63-A0C2A68E6481> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal
0x7fffc17a8000 -     0x7fffc1837ff7  com.apple.CoreSymbolication (62046) <02145527-4A5D-378B-B768-21C2342038DC> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication
0x7fffc1838000 -     0x7fffc1977fe7  com.apple.coreui (2.1 - 431.3) <8D0FA478-9B6C-3D6D-8ADF-8677BA0BF134> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI
0x7fffc1978000 -     0x7fffc1a48ff3  com.apple.CoreUtils (5.1 - 510.31) <0DB85A25-0DB5-35DF-95AB-5932719CC5BC> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils
0x7fffc1a98000 -     0x7fffc1afdff3  com.apple.framework.CoreWiFi (12.0 - 1200.31) <C2D090BA-438C-3752-AE23-8A41E6E39742> /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi
0x7fffc1afe000 -     0x7fffc1b0cff7  com.apple.CrashReporterSupport (10.12 - 827) <802A9B81-E349-348B-90AB-10E40B654250> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport
0x7fffc1b7e000 -     0x7fffc1b88ffb  com.apple.framework.DFRFoundation (1.0 - 104.25) <7CFF896C-EF22-3941-BB3D-F3615CE4C908> /System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation
0x7fffc1b89000 -     0x7fffc1b8dff3  com.apple.DSExternalDisplay (3.1 - 380) <4B5E3FF0-E8C3-38CC-BF72-418C928956AB> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay
0x7fffc1bc3000 -     0x7fffc1c38ffb  com.apple.datadetectorscore (7.0 - 539.1) <D84B64BA-CD56-368E-A31A-AC47C3780D0B> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore
0x7fffc1c74000 -     0x7fffc1cb3fff  com.apple.DebugSymbols (137 - 137) <58A70B66-2628-3CFE-B103-2200D95FC5F7> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
0x7fffc1cb4000 -     0x7fffc1dc5fff  com.apple.desktopservices (1.11.6 - 1.11.6) <225B3746-8626-34CD-8FA9-48A7C04ACCCF> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv
0x7fffc1f08000 -     0x7fffc1f13fff  com.apple.DisplayServicesFW (3.1 - 380) <0BDF6C17-5E5F-33F8-8E99-C7350C6F9667> /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices
0x7fffc20ad000 -     0x7fffc24deff7  com.apple.vision.FaceCore (3.3.2 - 3.3.2) <9391D5A3-738C-3136-9D07-518CB43DBADA> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore
0x7fffc3835000 -     0x7fffc3835fff  libmetal_timestamp.dylib (600.0.49.9) <E5EED927-1671-3390-BCBB-D76201D63C73> /System/Library/PrivateFrameworks/GPUCompiler.framework/libmetal_timestamp.dylib
0x7fffc3842000 -     0x7fffc384dff3  libGPUSupportMercury.dylib (14.0.16) <1216909A-E38E-335F-9F46-9362753AE0D1> /System/Library/PrivateFrameworks/GPUSupport.framework/Versions/A/Libraries/libGPUSupportMercury.dylib
0x7fffc3b06000 -     0x7fffc3b22fff  com.apple.GenerationalStorage (2.0 - 267.2) <22381303-B9A8-32D8-BDBF-871F0CDD81A5> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage
0x7fffc4233000 -     0x7fffc42a9ff3  com.apple.Heimdal (4.0 - 2.0) <39CF9772-0359-3745-AF77-BC6B29A210F2> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal
0x7fffc48c4000 -     0x7fffc48cbffb  com.apple.IOAccelerator (311.16.2 - 311.16.2) <96FA28B6-B03D-3A5E-AF07-0AE4486D2968> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator
0x7fffc48cd000 -     0x7fffc48e1ff7  com.apple.IOPresentment (1.0 - 29.10) <30DF04EE-10E2-353F-845F-A97B87DF3207> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment
0x7fffc48e2000 -     0x7fffc4904fff  com.apple.IconServices (74.4 - 74.4) <218DDD05-35F4-3833-B98D-471ED0EBC031> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices
0x7fffc49a0000 -     0x7fffc49b0ff3  com.apple.IntlPreferences (2.0 - 216) <7A417848-2A43-35A3-9CD4-61F33D573C56> /System/Library/PrivateFrameworks/IntlPreferences.framework/Versions/A/IntlPreferences
0x7fffc49eb000 -     0x7fffc4ba2fff  com.apple.LanguageModeling (1.0 - 123.2.5) <A8CA965F-0399-310D-91C3-B93DDDE9A442> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling
0x7fffc5212000 -     0x7fffc5215fff  com.apple.Mangrove (1.0 - 1) <98814966-FD65-302B-B47E-00928DC34E5C> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove
0x7fffc54c3000 -     0x7fffc553cff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <C323FC94-FFA5-3EE6-B2AC-7E61EA92F304> /System/Library/PrivateFrameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders
0x7fffc56aa000 -     0x7fffc56b8fff  com.apple.MobileKeyBag (2.0 - 1.0) <D0983DB7-EF9D-3E19-A084-21319ECE5846> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag
0x7fffc56c9000 -     0x7fffc56f1ff7  com.apple.MultitouchSupport.framework (368.16 - 368.16) <AEA94167-8559-3846-9F43-40E7CDFB2209> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport
0x7fffc57a3000 -     0x7fffc57aefff  com.apple.NetAuth (6.2 - 6.2) <97F487D6-8089-31A8-B68C-6C1EAC6ED1B5> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth
0x7fffc6086000 -     0x7fffc60c7ff3  com.apple.PerformanceAnalysis (1.148.3 - 148.3) <2317F006-E49C-3755-A2FB-615AE15FB1A3> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis
0x7fffc67af000 -     0x7fffc67c9fff  com.apple.ProtocolBuffer (1 - 249.1) <A1F1B0F3-078F-378F-A9A9-0DEEA70E816A> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer
0x7fffc67ca000 -     0x7fffc67d9ff7  com.apple.QuickLookThumbnailing (1.0 - 1) <173EE873-1700-3FCA-9782-C060FBB5BCAD> /System/Library/PrivateFrameworks/QuickLookThumbnailing.framework/Versions/A/QuickLookThumbnailing
0x7fffc67e2000 -     0x7fffc6805ff3  com.apple.RemoteViewServices (2.0 - 124) <6B967FDA-6591-302C-BA0A-76C4856E584E> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices
0x7fffc74cf000 -     0x7fffc74d2fff  com.apple.SecCodeWrapper (4.0 - 307.50.21) <F8E957B2-D3F0-3B73-B38C-AE8868F00939> /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper
0x7fffc7561000 -     0x7fffc75eefff  com.apple.Sharing (696.2.67 - 696.2.67) <F681EE28-153F-3216-97A6-6F5E4148AB2E> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing
0x7fffc760f000 -     0x7fffc7875fef  com.apple.SkyLight (1.600.0 - 170.3.11.1) <E03A088B-BEBD-3069-B4A0-3AF9D8BCF8AD> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight
0x7fffc7a54000 -     0x7fffc7a60ff7  com.apple.SpeechRecognitionCore (3.3.2 - 3.3.2) <684BD1EA-8268-331C-A5A9-080EB375C658> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore
0x7fffc814c000 -     0x7fffc81c0fdf  com.apple.Symbolication (62048.1) <1A30ED19-7532-3F46-9DD3-9879A973D0CF> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
0x7fffc85ff000 -     0x7fffc8605ff7  com.apple.TCC (1.0 - 1) <911B534B-4AC7-34E4-935E-E42ECD008CBC> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC
0x7fffc8691000 -     0x7fffc8757ff7  com.apple.TextureIO (2.8 - 2.8) <3D61E533-4156-3B21-B7ED-CB823E680DFC> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO
0x7fffc87cb000 -     0x7fffc87ccfff  com.apple.TrustEvaluationAgent (2.0 - 28.50.1) <EBE65DD5-1732-3747-8C6C-7BECEBF089A4> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent
0x7fffc87cd000 -     0x7fffc895dff3  com.apple.UIFoundation (1.0 - 490.7) <2A3063FE-1790-3510-8A0E-AEC581D42B7E> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation
0x7fffc942c000 -     0x7fffc94ecfff  com.apple.ViewBridge (283 - 283) <25A635B3-C87C-3D3A-ADF3-539713FA1048> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge
0x7fffc9937000 -     0x7fffc993dfff  com.apple.XPCService (2.0 - 1) <4B28B225-2105-33F4-9ED0-F04288FF4FB1> /System/Library/PrivateFrameworks/XPCService.framework/Versions/A/XPCService
0x7fffc9a0e000 -     0x7fffc9a10ffb  com.apple.loginsupport (1.0 - 1) <F3140B97-12C3-35A7-9D3D-43DA2D13C113> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport
0x7fffc9a65000 -     0x7fffc9a80ff7  libCRFSuite.dylib (34) <F78B7F5F-0B4F-35C6-AA2F-84EE9CB22137> /usr/lib/libCRFSuite.dylib
0x7fffc9a81000 -     0x7fffc9a8cfff  libChineseTokenizer.dylib (21) <0886E908-A825-36AF-B94B-2361FD8BC2A1> /usr/lib/libChineseTokenizer.dylib
0x7fffc9b1e000 -     0x7fffc9b1fff3  libDiagnosticMessagesClient.dylib (102) <84A04D24-0E60-3810-A8C0-90A65E2DF61A> /usr/lib/libDiagnosticMessagesClient.dylib
0x7fffc9b20000 -     0x7fffc9d33fff  libFosl_dynamic.dylib (16.39) <E22A4243-D148-3C74-BA15-2D906A3D1F9E> /usr/lib/libFosl_dynamic.dylib
0x7fffc9d4f000 -     0x7fffc9d56fff  libMatch.1.dylib (27) <70D4BD2A-9383-37F2-B0D6-9B592D236601> /usr/lib/libMatch.1.dylib
0x7fffc9d57000 -     0x7fffc9d57fff  libOpenScriptingUtil.dylib (172.1) <0F1BA407-97D1-36F6-882D-A355EAAD5E00> /usr/lib/libOpenScriptingUtil.dylib
0x7fffc9d58000 -     0x7fffc9d5cffb  libScreenReader.dylib (477.40.6) <CBE6420C-EF60-3ACD-A0B6-7CBE936BA3B8> /usr/lib/libScreenReader.dylib
0x7fffc9d5d000 -     0x7fffc9d5effb  libSystem.B.dylib (1238.60.2) <7952CCEE-6FF0-340E-93A7-19FB6CA1B2F4> /usr/lib/libSystem.B.dylib
0x7fffc9dca000 -     0x7fffc9df5ff3  libarchive.2.dylib (41.70.2) <907D1FB1-9A65-33F5-AFC8-0B6E5AE9D83A> /usr/lib/libarchive.2.dylib
0x7fffc9df6000 -     0x7fffc9e72fc7  libate.dylib (1.12.13) <D0767875-D02E-3377-84D8-5F174C27BEA9> /usr/lib/libate.dylib
0x7fffc9e76000 -     0x7fffc9e76ff3  libauto.dylib (187) <34388D0B-C539-3C1B-9408-2BC152162E43> /usr/lib/libauto.dylib
0x7fffc9e77000 -     0x7fffc9e87ff3  libbsm.0.dylib (34) <20084796-B04D-3B35-A003-EA11459557A9> /usr/lib/libbsm.0.dylib
0x7fffc9e88000 -     0x7fffc9e96ff7  libbz2.1.0.dylib (38) <ADFA329A-DCE7-356D-8F09-A3168DFC6610> /usr/lib/libbz2.1.0.dylib
0x7fffc9e97000 -     0x7fffc9eedff7  libc++.1.dylib (307.5) <0B43BB5D-E6EB-3464-8DE9-B41AC8ED9D1C> /usr/lib/libc++.1.dylib
0x7fffc9eee000 -     0x7fffc9f17ff7  libc++abi.dylib (307.4) <BC271AD3-831B-362A-9DA7-E8C51F285FE4> /usr/lib/libc++abi.dylib
0x7fffc9f18000 -     0x7fffc9f28ffb  libcmph.dylib (6) <2B5D405E-2D0B-3320-ABD6-622934C86ABE> /usr/lib/libcmph.dylib
0x7fffc9f29000 -     0x7fffc9f3ffcf  libcompression.dylib (39) <F2726F95-F54E-3B21-BCB5-F7151DEFDC2F> /usr/lib/libcompression.dylib
0x7fffc9f40000 -     0x7fffc9f40ff7  libcoretls.dylib (121.50.4) <64B1001E-10F6-3542-A3B2-C4B49F51817F> /usr/lib/libcoretls.dylib
0x7fffc9f41000 -     0x7fffc9f42ff3  libcoretls_cfhelpers.dylib (121.50.4) <1A10303E-5EB0-3C7C-9165-021FCDFD934D> /usr/lib/libcoretls_cfhelpers.dylib
0x7fffc9ffc000 -     0x7fffca0e0ff7  libcrypto.0.9.8.dylib (64.50.7) <B34BC0FA-18ED-37C5-9D46-393803CADEBB> /usr/lib/libcrypto.0.9.8.dylib
0x7fffca27e000 -     0x7fffca2d1ff7  libcups.2.dylib (450.3) <D2756AA0-6276-3D5F-9F69-4A9903AA43FE> /usr/lib/libcups.2.dylib
0x7fffca325000 -     0x7fffca32cff3  libdscsym.dylib (148.3) <9AFDF120-B0EC-3FD8-BC18-AB32ED9E6522> /usr/lib/libdscsym.dylib
0x7fffca34e000 -     0x7fffca34efff  libenergytrace.dylib (15) <A1B040A2-7977-3097-9ADF-34FF181EB970> /usr/lib/libenergytrace.dylib
0x7fffca35e000 -     0x7fffca363ff7  libheimdal-asn1.dylib (498.50.10) <F7B77939-35A5-327A-B8BF-BF71EF5DC230> /usr/lib/libheimdal-asn1.dylib
0x7fffca364000 -     0x7fffca456ff7  libiconv.2.dylib (50) <42125B35-81D7-3FC4-9475-A26DBE10884D> /usr/lib/libiconv.2.dylib
0x7fffca457000 -     0x7fffca67cffb  libicucore.A.dylib (57168.0.1) <99D53A36-19F6-34F0-86AB-D8BD6C9BD3AD> /usr/lib/libicucore.A.dylib
0x7fffca682000 -     0x7fffca683fff  liblangid.dylib (126) <2085E7A7-9A34-3735-87F4-F174EF8EABF0> /usr/lib/liblangid.dylib
0x7fffca684000 -     0x7fffca69dffb  liblzma.5.dylib (10) <44BD0279-99DD-36B5-8A6E-C11432E2098D> /usr/lib/liblzma.5.dylib
0x7fffca69e000 -     0x7fffca6b4ff7  libmarisa.dylib (5) <9030D214-5D0F-30CB-AC03-902C63909362> /usr/lib/libmarisa.dylib
0x7fffca6b5000 -     0x7fffca95dff7  libmecabra.dylib (744.8) <D429FCC9-42A4-38B3-8784-44024BC859EF> /usr/lib/libmecabra.dylib
0x7fffca990000 -     0x7fffcaa0aff3  libnetwork.dylib (856.60.1) <191E99F5-4723-3180-8013-02AF2F9AE4B8> /usr/lib/libnetwork.dylib
0x7fffcaa0b000 -     0x7fffcaddd047  libobjc.A.dylib (709.1) <70614861-0340-32E2-85ED-FE65759CDFFA> /usr/lib/libobjc.A.dylib
0x7fffcade0000 -     0x7fffcade4fff  libpam.2.dylib (21.30.1) <71EB0D88-DE84-3C8D-A2C5-58AA282BC5BC> /usr/lib/libpam.2.dylib
0x7fffcade5000 -     0x7fffcae16fff  libpcap.A.dylib (67.60.2) <B2D36AD8-D5C8-3875-AC81-4787A15E44C2> /usr/lib/libpcap.A.dylib
0x7fffcae33000 -     0x7fffcae4fffb  libresolv.9.dylib (64) <A244AE4C-00B0-396C-98FF-97FE4DB3DA30> /usr/lib/libresolv.9.dylib
0x7fffcae50000 -     0x7fffcae89fff  libsandbox.1.dylib (592.70.2) <B0521446-B924-3FED-A14C-484480D31C5E> /usr/lib/libsandbox.1.dylib
0x7fffcae9d000 -     0x7fffcae9eff3  libspindump.dylib (231.3) <6BCD9245-3237-32F3-9075-6AC04D0F366D> /usr/lib/libspindump.dylib
0x7fffcae9f000 -     0x7fffcafedff7  libsqlite3.dylib (254.8) <1ECF7DF7-7A07-3B4B-A63B-F4EFF6BC7ACF> /usr/lib/libsqlite3.dylib
0x7fffcb049000 -     0x7fffcb099fff  libstdc++.6.dylib (104.1) <A980E08C-A511-3D19-9881-1D79B7CFF2BA> /usr/lib/libstdc++.6.dylib
0x7fffcb0e2000 -     0x7fffcb0effff  libxar.1.dylib (357) <69547C64-E811-326F-BBED-490C6361BDCB> /usr/lib/libxar.1.dylib
0x7fffcb0f0000 -     0x7fffcb1dfff3  libxml2.2.dylib (30.23) <307564E4-7CF2-3010-BA8F-1D302E662EAF> /usr/lib/libxml2.2.dylib
0x7fffcb1e0000 -     0x7fffcb209fff  libxslt.1.dylib (15.9.1) <A1EFC225-2115-3710-A2FD-B11FDE15B01F> /usr/lib/libxslt.1.dylib
0x7fffcb20a000 -     0x7fffcb21bff3  libz.1.dylib (67) <46E3FFA2-4328-327A-8D34-A03E20BFFB8E> /usr/lib/libz.1.dylib
0x7fffcb22a000 -     0x7fffcb22eff7  libcache.dylib (79) <093A4DAB-8385-3D47-A350-E20CB7CCF7BF> /usr/lib/system/libcache.dylib
0x7fffcb22f000 -     0x7fffcb239fff  libcommonCrypto.dylib (60092.50.5) <03EEAAED-DDDC-32D4-B7BA-4266AB62DB75> /usr/lib/system/libcommonCrypto.dylib
0x7fffcb23a000 -     0x7fffcb241fff  libcompiler_rt.dylib (62) <55D47421-772A-32AB-B529-1A46C2F43B4D> /usr/lib/system/libcompiler_rt.dylib
0x7fffcb242000 -     0x7fffcb24afff  libcopyfile.dylib (138) <819BEA3C-DF11-3E3D-A1A1-5A51C5BF1961> /usr/lib/system/libcopyfile.dylib
0x7fffcb24b000 -     0x7fffcb2cefdb  libcorecrypto.dylib (442.50.21) <291DA62F-6958-370F-82ED-7073538A3D3A> /usr/lib/system/libcorecrypto.dylib
0x7fffcb2cf000 -     0x7fffcb300fff  libdispatch.dylib (703.50.38) <54B02414-5908-3EF0-B4D2-230B7FEB1CF7> /usr/lib/system/libdispatch.dylib
0x7fffcb301000 -     0x7fffcb306ffb  libdyld.dylib (434) <A6536BE4-B414-3C9A-BE59-3C3E8B20B00A> /usr/lib/system/libdyld.dylib
0x7fffcb307000 -     0x7fffcb307ffb  libkeymgr.dylib (28) <7AA011A9-DC21-3488-BF73-3B5B14D1FDD6> /usr/lib/system/libkeymgr.dylib
0x7fffcb308000 -     0x7fffcb314fff  libkxld.dylib (3789.73.24) <7AC52671-578B-38F8-B1B9-9143574139AB> /usr/lib/system/libkxld.dylib
0x7fffcb315000 -     0x7fffcb315fff  liblaunch.dylib (972.70.2) <DB690F9D-4A72-38F3-A82C-44E7B27BE4C9> /usr/lib/system/liblaunch.dylib
0x7fffcb316000 -     0x7fffcb31bff3  libmacho.dylib (898) <17D5D855-F6C3-3B04-B680-E9BF02EF8AED> /usr/lib/system/libmacho.dylib
0x7fffcb31c000 -     0x7fffcb31eff3  libquarantine.dylib (85.50.1) <12448CC2-378E-35F3-BE33-9DC395A5B970> /usr/lib/system/libquarantine.dylib
0x7fffcb31f000 -     0x7fffcb320ffb  libremovefile.dylib (45) <38D4CB9C-10CD-30D3-8B7B-A515EC75FE85> /usr/lib/system/libremovefile.dylib
0x7fffcb321000 -     0x7fffcb339ff7  libsystem_asl.dylib (349.50.5) <096E4228-3B7C-30A6-8B13-EC909A64499A> /usr/lib/system/libsystem_asl.dylib
0x7fffcb33a000 -     0x7fffcb33aff7  libsystem_blocks.dylib (67) <10DC5404-73AB-35B3-A277-A8AFECB476EB> /usr/lib/system/libsystem_blocks.dylib
0x7fffcb33b000 -     0x7fffcb3c8fef  libsystem_c.dylib (1158.50.2) <E5AE5244-7D0C-36AC-8BB6-C7AE7EA52A4B> /usr/lib/system/libsystem_c.dylib
0x7fffcb3c9000 -     0x7fffcb3ccffb  libsystem_configuration.dylib (888.60.2) <BECC01A2-CA8D-31E6-BCDF-D452965FA976> /usr/lib/system/libsystem_configuration.dylib
0x7fffcb3cd000 -     0x7fffcb3d0fff  libsystem_coreservices.dylib (41.4) <7D26DE79-B424-3450-85E1-F7FAB32714AB> /usr/lib/system/libsystem_coreservices.dylib
0x7fffcb3d1000 -     0x7fffcb3e9fff  libsystem_coretls.dylib (121.50.4) <EC6FCF07-DCFB-3A03-9CC9-6DD3709974C6> /usr/lib/system/libsystem_coretls.dylib
0x7fffcb3ea000 -     0x7fffcb3f0fff  libsystem_dnssd.dylib (765.50.10) <0999444C-8148-3557-AC22-F5659D15FA62> /usr/lib/system/libsystem_dnssd.dylib
0x7fffcb3f1000 -     0x7fffcb41aff7  libsystem_info.dylib (503.50.4) <611DB84C-BF70-3F92-8702-B9F28A900920> /usr/lib/system/libsystem_info.dylib
0x7fffcb41b000 -     0x7fffcb43dff7  libsystem_kernel.dylib (3789.73.24) <9A17C927-793A-3679-80DC-B52BDA8ED322> /usr/lib/system/libsystem_kernel.dylib
0x7fffcb43e000 -     0x7fffcb485fe7  libsystem_m.dylib (3121.6) <86D499B5-BBDC-3D3B-8A4E-97AE8E6672A4> /usr/lib/system/libsystem_m.dylib
0x7fffcb486000 -     0x7fffcb4a4ff7  libsystem_malloc.dylib (116.50.8) <A3D15F17-99A6-3367-8C7E-4280E8619C95> /usr/lib/system/libsystem_malloc.dylib
0x7fffcb4a5000 -     0x7fffcb4feffb  libsystem_network.dylib (856.60.1) <369D0221-56CA-3C3E-9EDE-94B41CAE77B7> /usr/lib/system/libsystem_network.dylib
0x7fffcb4ff000 -     0x7fffcb508ff3  libsystem_networkextension.dylib (563.60.2) <B021F2B3-8A75-3633-ABB0-FC012B8E9B0C> /usr/lib/system/libsystem_networkextension.dylib
0x7fffcb509000 -     0x7fffcb512ff3  libsystem_notify.dylib (165.20.1) <B8160190-A069-3B3A-BDF6-2AA408221FAE> /usr/lib/system/libsystem_notify.dylib
0x7fffcb513000 -     0x7fffcb51bfe7  libsystem_platform.dylib (126.50.8) <897462FD-B318-321B-A554-E61982630F7E> /usr/lib/system/libsystem_platform.dylib
0x7fffcb51c000 -     0x7fffcb526ff7  libsystem_pthread.dylib (218.60.3) <B8FB5E20-3295-39E2-B5EB-B464D1D4B104> /usr/lib/system/libsystem_pthread.dylib
0x7fffcb527000 -     0x7fffcb52aff7  libsystem_sandbox.dylib (592.70.2) <19320A42-2E3B-361B-BBDA-2F5F2E87B100> /usr/lib/system/libsystem_sandbox.dylib
0x7fffcb52b000 -     0x7fffcb52cff3  libsystem_secinit.dylib (24.50.4) <F78B847B-3565-3E4B-98A6-F7AD40392E2D> /usr/lib/system/libsystem_secinit.dylib
0x7fffcb52d000 -     0x7fffcb534ffb  libsystem_symptoms.dylib (532.50.48) <1C822669-BF39-3639-A00B-B9170A63F342> /usr/lib/system/libsystem_symptoms.dylib
0x7fffcb535000 -     0x7fffcb548ff7  libsystem_trace.dylib (518.70.1) <AC63A7FE-50D9-3A30-96E6-F6B7FF16E465> /usr/lib/system/libsystem_trace.dylib
0x7fffcb549000 -     0x7fffcb54effb  libunwind.dylib (35.3) <3D50D8A8-C460-334D-A519-2DA841102C6B> /usr/lib/system/libunwind.dylib
0x7fffcb54f000 -     0x7fffcb578ff7  libxpc.dylib (972.70.2) <ABC3BB29-BCE6-3E50-8A71-4E56AEE28991> /usr/lib/system/libxpc.dylib

External Modification Summary:
Calls made by other processes targeting this process:
task_for_pid: 755
thread_create: 0
thread_set_state: 0
Calls made by this process:
task_for_pid: 0
thread_create: 0
thread_set_state: 0
Calls made by all processes on this machine:
task_for_pid: 10908331
thread_create: 0
thread_set_state: 30105

VM Region Summary:
ReadOnly portion of Libraries: Total=323.4M resident=0K(0%) swapped_out_or_unallocated=323.4M(100%)
Writable regions: Total=577.8M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=577.8M(100%)

VIRTUAL   REGION
REGION TYPE                        SIZE    COUNT (non-coalesced)
===========                     =======  =======
Accelerate framework               384K        4
Activity Tracing                   256K        2
CG backing stores                 20.7M        4
CG image                           140K       13
CoreAnimation                       76K        9
CoreUI image data                 1692K       12
CoreUI image file                  292K        6
Foundation                           4K        2
IOKit                             15.5M        2
Kernel Alloc Once                    8K        2
MALLOC                           480.0M       69
MALLOC guard page                   48K       10
MALLOC_LARGE (reserved)           9072K        4         reserved VM address space (unallocated)
Memory Tag 242                      12K        2
Memory Tag 249                     156K        2
STACK GUARD                       56.0M        8
Stack                             11.2M       26
VM_ALLOCATE                        156K       19
VM_ALLOCATE (reserved)              36K        2         reserved VM address space (unallocated)
__DATA                            76.0M      263
__GLSLBUILTINS                    2588K        2
__IMAGE                            528K        2
__LINKEDIT                       117.1M       12
__TEXT                           206.4M      261
__UNICODE                          556K        2
mapped file                       54.1M       13
shared memory                     16.4M       12
===========                     =======  =======
TOTAL                              1.0G      738
TOTAL, minus reserved VM space     1.0G      738

Model: MacBookPro11,3, BootROM 149.0.0.0.0, 4 processors, Intel Core i7, 2.6 GHz, 16 GB, SMC 2.19f12
Graphics: Intel Iris Pro, Intel Iris Pro, Built-In
Graphics: NVIDIA GeForce GT 750M, NVIDIA GeForce GT 750M, PCIe, 2048 MB
Memory Module: BANK 0/DIMM0, 8 GB, DDR3, 1600 MHz, 0x80AD, 0x484D54343147533641465238412D50422020
Memory Module: BANK 1/DIMM0, 8 GB, DDR3, 1600 MHz, 0x80AD, 0x484D54343147533641465238412D50422020
AirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x134), Broadcom BCM43xx 1.0 (7.21.171.133.1a2)
Bluetooth: Version 5.0.5f3, 3 services, 17 devices, 1 incoming serial ports
Network Service: Wi-Fi, AirPort, en0
Serial ATA Device: APPLE SSD SM1024F, 1 TB
USB Device: USB 3.0 Bus
USB Device: Apple Internal Keyboard / Trackpad
USB Device: BRCM20702 Hub
USB Device: Bluetooth USB Host Controller
Thunderbolt Bus: MacBook Pro, Apple Inc., 17.1


